ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   ** This notice applies to any and all portions of this file
   8:Src/main.c    ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/main.c    ****   * USER CODE END. Other portions of this file, whether 
  10:Src/main.c    ****   * inserted by the user or by software development tools
  11:Src/main.c    ****   * are owned by their respective copyright owners.
  12:Src/main.c    ****   *
  13:Src/main.c    ****   * COPYRIGHT(c) 2019 STMicroelectronics
  14:Src/main.c    ****   *
  15:Src/main.c    ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/main.c    ****   * are permitted provided that the following conditions are met:
  17:Src/main.c    ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/main.c    ****   *      this list of conditions and the following disclaimer.
  19:Src/main.c    ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/main.c    ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/main.c    ****   *      and/or other materials provided with the distribution.
  22:Src/main.c    ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/main.c    ****   *      may be used to endorse or promote products derived from this software
  24:Src/main.c    ****   *      without specific prior written permission.
  25:Src/main.c    ****   *
  26:Src/main.c    ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/main.c    ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/main.c    ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/main.c    ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/main.c    ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/main.c    ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/main.c    ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  33:Src/main.c    ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 2


  34:Src/main.c    ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/main.c    ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/main.c    ****   *
  37:Src/main.c    ****   ******************************************************************************
  38:Src/main.c    ****   */
  39:Src/main.c    **** /* USER CODE END Header */
  40:Src/main.c    **** 
  41:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  42:Src/main.c    **** #include "main.h"
  43:Src/main.c    **** 
  44:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  45:Src/main.c    **** /* USER CODE BEGIN Includes */
  46:Src/main.c    **** 
  47:Src/main.c    **** /* USER CODE END Includes */
  48:Src/main.c    **** 
  49:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  50:Src/main.c    **** /* USER CODE BEGIN PTD */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PTD */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  55:Src/main.c    **** /* USER CODE BEGIN PD */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* USER CODE END PD */
  58:Src/main.c    **** 
  59:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  60:Src/main.c    **** /* USER CODE BEGIN PM */
  61:Src/main.c    **** 
  62:Src/main.c    **** /* USER CODE END PM */
  63:Src/main.c    **** 
  64:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  65:Src/main.c    **** ADC_HandleTypeDef hadc1;
  66:Src/main.c    **** 
  67:Src/main.c    **** TIM_HandleTypeDef htim2;
  68:Src/main.c    **** TIM_HandleTypeDef htim3;
  69:Src/main.c    **** 
  70:Src/main.c    **** UART_HandleTypeDef huart1;
  71:Src/main.c    **** 
  72:Src/main.c    **** /* USER CODE BEGIN PV */
  73:Src/main.c    **** long ADCValue = 0;
  74:Src/main.c    **** int freq = 0;
  75:Src/main.c    **** int delay = 0;
  76:Src/main.c    **** int count = 0;
  77:Src/main.c    **** int freq2 = 100;
  78:Src/main.c    **** int delay2 = 0;
  79:Src/main.c    **** int direction = 1;
  80:Src/main.c    **** /* USER CODE END PV */
  81:Src/main.c    **** 
  82:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  83:Src/main.c    **** void SystemClock_Config(void);
  84:Src/main.c    **** static void MX_GPIO_Init(void);
  85:Src/main.c    **** static void MX_USART1_UART_Init(void);
  86:Src/main.c    **** static void MX_ADC1_Init(void);
  87:Src/main.c    **** static void MX_TIM2_Init(void);
  88:Src/main.c    **** static void MX_TIM3_Init(void);
  89:Src/main.c    **** /* USER CODE BEGIN PFP */
  90:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 3


  91:Src/main.c    **** /* USER CODE END PFP */
  92:Src/main.c    **** 
  93:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  94:Src/main.c    **** /* USER CODE BEGIN 0 */
  95:Src/main.c    **** 
  96:Src/main.c    **** /* USER CODE END 0 */
  97:Src/main.c    **** 
  98:Src/main.c    **** /**
  99:Src/main.c    ****   * @brief  The application entry point.
 100:Src/main.c    ****   * @retval int
 101:Src/main.c    ****   */
 102:Src/main.c    **** int main(void)
 103:Src/main.c    **** {
 104:Src/main.c    ****   /* USER CODE BEGIN 1 */
 105:Src/main.c    **** 
 106:Src/main.c    ****   /* USER CODE END 1 */
 107:Src/main.c    **** 
 108:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
 109:Src/main.c    **** 
 110:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Src/main.c    ****   HAL_Init();
 112:Src/main.c    **** 
 113:Src/main.c    ****   /* USER CODE BEGIN Init */
 114:Src/main.c    **** 
 115:Src/main.c    ****   /* USER CODE END Init */
 116:Src/main.c    **** 
 117:Src/main.c    ****   /* Configure the system clock */
 118:Src/main.c    ****   SystemClock_Config();
 119:Src/main.c    **** 
 120:Src/main.c    ****   /* USER CODE BEGIN SysInit */
 121:Src/main.c    **** 
 122:Src/main.c    ****   /* USER CODE END SysInit */
 123:Src/main.c    **** 
 124:Src/main.c    ****   /* Initialize all configured peripherals */
 125:Src/main.c    ****   MX_GPIO_Init();
 126:Src/main.c    ****   MX_USART1_UART_Init();
 127:Src/main.c    ****   MX_ADC1_Init();
 128:Src/main.c    ****   MX_TIM2_Init();
 129:Src/main.c    ****   MX_TIM3_Init();
 130:Src/main.c    ****   /* USER CODE BEGIN 2 */
 131:Src/main.c    **** 
 132:Src/main.c    ****   /* USER CODE END 2 */
 133:Src/main.c    **** 
 134:Src/main.c    ****   /* Infinite loop */
 135:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 136:Src/main.c    ****   while (1)
 137:Src/main.c    ****   {
 138:Src/main.c    ****     /* USER CODE END WHILE */
 139:Src/main.c    **** 	HAL_ADC_Start(&hadc1);
 140:Src/main.c    **** 	
 141:Src/main.c    **** 	if (HAL_ADC_PollForConversion(&hadc1, 1000) == HAL_OK)
 142:Src/main.c    ****         {
 143:Src/main.c    ****             ADCValue = HAL_ADC_GetValue(&hadc1);
 144:Src/main.c    ****         }
 145:Src/main.c    **** 		
 146:Src/main.c    **** 	/*if (delay == 800) HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
 147:Src/main.c    **** 	else HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_SET);*/
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 4


 148:Src/main.c    **** 	
 149:Src/main.c    **** 	// min freq at 0V = 50Hz
 150:Src/main.c    **** 	// max freq at >=3.3V = 150Hz (4096)
 151:Src/main.c    **** 	
 152:Src/main.c    **** 	freq = 50 + 0.0245 * ADCValue;
 153:Src/main.c    **** 	delay = 40000 / freq;
 154:Src/main.c    **** 	
 155:Src/main.c    **** 	if (count == 2)
 156:Src/main.c    ****     {
 157:Src/main.c    **** 	  if (direction == 1) freq2++;
 158:Src/main.c    **** 	  else freq2--;
 159:Src/main.c    **** 	  if (freq2 == 150) direction = 0;
 160:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 161:Src/main.c    **** 	  count = 0;
 162:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 163:Src/main.c    ****     }
 164:Src/main.c    **** 	
 165:Src/main.c    **** 	delay2 = 40000 / freq2;
 166:Src/main.c    **** 	
 167:Src/main.c    **** 	TIM2->ARR = delay/2;
 168:Src/main.c    **** 	TIM3->ARR = delay2/2;
 169:Src/main.c    **** 	
 170:Src/main.c    **** 	unsigned char data[4];
 171:Src/main.c    **** 	data[0] = (freq>>8) & 0xFF;
 172:Src/main.c    **** 	data[1] = 0xFF;
 173:Src/main.c    **** 	data[1] = (freq2>>0) & 0xFF;
 174:Src/main.c    **** 	data[2] = 0xFF;
 175:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 176:Src/main.c    ****     /* USER CODE BEGIN 3 */
 177:Src/main.c    ****   }
 178:Src/main.c    ****   /* USER CODE END 3 */
 179:Src/main.c    **** }
 180:Src/main.c    **** 
 181:Src/main.c    **** /**
 182:Src/main.c    ****   * @brief System Clock Configuration
 183:Src/main.c    ****   * @retval None
 184:Src/main.c    ****   */
 185:Src/main.c    **** void SystemClock_Config(void)
 186:Src/main.c    **** {
 187:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 188:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 189:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 190:Src/main.c    **** 
 191:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 192:Src/main.c    ****   */
 193:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 194:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 195:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 196:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 197:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 198:Src/main.c    ****   {
 199:Src/main.c    ****     Error_Handler();
 200:Src/main.c    ****   }
 201:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 202:Src/main.c    ****   */
 203:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 204:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 5


 205:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 206:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 207:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 208:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 209:Src/main.c    **** 
 210:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 211:Src/main.c    ****   {
 212:Src/main.c    ****     Error_Handler();
 213:Src/main.c    ****   }
 214:Src/main.c    ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 215:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 216:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 217:Src/main.c    ****   {
 218:Src/main.c    ****     Error_Handler();
 219:Src/main.c    ****   }
 220:Src/main.c    **** }
 221:Src/main.c    **** 
 222:Src/main.c    **** /**
 223:Src/main.c    ****   * @brief ADC1 Initialization Function
 224:Src/main.c    ****   * @param None
 225:Src/main.c    ****   * @retval None
 226:Src/main.c    ****   */
 227:Src/main.c    **** static void MX_ADC1_Init(void)
 228:Src/main.c    **** {
 229:Src/main.c    **** 
 230:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 0 */
 231:Src/main.c    **** 
 232:Src/main.c    ****   /* USER CODE END ADC1_Init 0 */
 233:Src/main.c    **** 
 234:Src/main.c    ****   ADC_ChannelConfTypeDef sConfig = {0};
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 1 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END ADC1_Init 1 */
 239:Src/main.c    ****   /**Common config 
 240:Src/main.c    ****   */
 241:Src/main.c    ****   hadc1.Instance = ADC1;
 242:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 243:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 244:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 245:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 246:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 247:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 248:Src/main.c    ****   //hadc1.Init.EOCSelection = DISABLE; //not generated
 249:Src/main.c    ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 250:Src/main.c    ****   {
 251:Src/main.c    ****     Error_Handler();
 252:Src/main.c    ****   }
 253:Src/main.c    ****   /**Configure Regular Channel 
 254:Src/main.c    ****   */
 255:Src/main.c    ****   sConfig.Channel = ADC_CHANNEL_3;
 256:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 257:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 258:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 259:Src/main.c    ****   {
 260:Src/main.c    ****     Error_Handler();
 261:Src/main.c    ****   }
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 6


 262:Src/main.c    ****   /* USER CODE BEGIN ADC1_Init 2 */
 263:Src/main.c    ****   
 264:Src/main.c    ****   /* USER CODE END ADC1_Init 2 */
 265:Src/main.c    **** 
 266:Src/main.c    **** }
 267:Src/main.c    **** 
 268:Src/main.c    **** /**
 269:Src/main.c    ****   * @brief TIM2 Initialization Function
 270:Src/main.c    ****   * @param None
 271:Src/main.c    ****   * @retval None
 272:Src/main.c    ****   */
 273:Src/main.c    **** static void MX_TIM2_Init(void)
 274:Src/main.c    **** {
 275:Src/main.c    **** 
 276:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 277:Src/main.c    **** 
 278:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 279:Src/main.c    **** 
 280:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 281:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 282:Src/main.c    **** 
 283:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 284:Src/main.c    **** 
 285:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 286:Src/main.c    ****   htim2.Instance = TIM2;
 287:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 288:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_DOWN;
 289:Src/main.c    ****   htim2.Init.Period = 40000;
 290:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 291:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 292:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 293:Src/main.c    ****   {
 294:Src/main.c    ****     Error_Handler();
 295:Src/main.c    ****   }
 296:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 297:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 298:Src/main.c    ****   {
 299:Src/main.c    ****     Error_Handler();
 300:Src/main.c    ****   }
 301:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 302:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 303:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 304:Src/main.c    ****   {
 305:Src/main.c    ****     Error_Handler();
 306:Src/main.c    ****   }
 307:Src/main.c    ****   
 308:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 309:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 310:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 311:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 312:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 313:Src/main.c    **** 
 314:Src/main.c    **** }
 315:Src/main.c    **** 
 316:Src/main.c    **** /**
 317:Src/main.c    ****   * @brief TIM3 Initialization Function
 318:Src/main.c    ****   * @param None
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 7


 319:Src/main.c    ****   * @retval None
 320:Src/main.c    ****   */
 321:Src/main.c    **** static void MX_TIM3_Init(void)
 322:Src/main.c    **** {
 323:Src/main.c    **** 
 324:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 325:Src/main.c    **** 
 326:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 327:Src/main.c    **** 
 328:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 329:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 330:Src/main.c    **** 
 331:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 332:Src/main.c    **** 
 333:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 334:Src/main.c    ****   htim3.Instance = TIM3;
 335:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 336:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_DOWN;
 337:Src/main.c    ****   htim3.Init.Period = 400/2;
 338:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 339:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 340:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 341:Src/main.c    ****   {
 342:Src/main.c    ****     Error_Handler();
 343:Src/main.c    ****   }
 344:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 345:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 346:Src/main.c    ****   {
 347:Src/main.c    ****     Error_Handler();
 348:Src/main.c    ****   }
 349:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 350:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 351:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 352:Src/main.c    ****   {
 353:Src/main.c    ****     Error_Handler();
 354:Src/main.c    ****   }
 355:Src/main.c    **** 
 356:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 357:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 358:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 359:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 360:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 361:Src/main.c    **** 
 362:Src/main.c    **** }
 363:Src/main.c    **** 
 364:Src/main.c    **** /**
 365:Src/main.c    ****   * @brief USART1 Initialization Function
 366:Src/main.c    ****   * @param None
 367:Src/main.c    ****   * @retval None
 368:Src/main.c    ****   */
 369:Src/main.c    **** static void MX_USART1_UART_Init(void)
 370:Src/main.c    **** {
 371:Src/main.c    **** 
 372:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 373:Src/main.c    **** 
 374:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 375:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 8


 376:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 377:Src/main.c    **** 
 378:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 379:Src/main.c    ****   huart1.Instance = USART1;
 380:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 381:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 382:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 383:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 384:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 385:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 386:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 387:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 388:Src/main.c    ****   {
 389:Src/main.c    ****     Error_Handler();
 390:Src/main.c    ****   }
 391:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 392:Src/main.c    **** 
 393:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 394:Src/main.c    **** 
 395:Src/main.c    **** }
 396:Src/main.c    **** 
 397:Src/main.c    **** /**
 398:Src/main.c    ****   * @brief GPIO Initialization Function
 399:Src/main.c    ****   * @param None
 400:Src/main.c    ****   * @retval None
 401:Src/main.c    ****   */
 402:Src/main.c    **** static void MX_GPIO_Init(void)
 403:Src/main.c    **** {
  26              		.loc 1 403 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 404:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 404 3 view .LVU1
  43              		.loc 1 404 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 405:Src/main.c    **** 
 406:Src/main.c    ****   /* GPIO Ports Clock Enable */
 407:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 407 3 is_stmt 1 view .LVU3
  50              	.LBB2:
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 9


  51              		.loc 1 407 3 view .LVU4
  52              		.loc 1 407 3 view .LVU5
  53 0010 204B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F01002 		orr	r2, r2, #16
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 407 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F01002 		and	r2, r2, #16
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 407 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
 408:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  64              		.loc 1 408 3 view .LVU8
  65              	.LBB3:
  66              		.loc 1 408 3 view .LVU9
  67              		.loc 1 408 3 view .LVU10
  68 0024 9A69     		ldr	r2, [r3, #24]
  69 0026 42F00402 		orr	r2, r2, #4
  70 002a 9A61     		str	r2, [r3, #24]
  71              		.loc 1 408 3 view .LVU11
  72 002c 9A69     		ldr	r2, [r3, #24]
  73 002e 02F00402 		and	r2, r2, #4
  74 0032 0292     		str	r2, [sp, #8]
  75              		.loc 1 408 3 view .LVU12
  76 0034 029A     		ldr	r2, [sp, #8]
  77              	.LBE3:
 409:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  78              		.loc 1 409 3 view .LVU13
  79              	.LBB4:
  80              		.loc 1 409 3 view .LVU14
  81              		.loc 1 409 3 view .LVU15
  82 0036 9A69     		ldr	r2, [r3, #24]
  83 0038 42F00802 		orr	r2, r2, #8
  84 003c 9A61     		str	r2, [r3, #24]
  85              		.loc 1 409 3 view .LVU16
  86 003e 9B69     		ldr	r3, [r3, #24]
  87 0040 03F00803 		and	r3, r3, #8
  88 0044 0393     		str	r3, [sp, #12]
  89              		.loc 1 409 3 view .LVU17
  90 0046 039B     		ldr	r3, [sp, #12]
  91              	.LBE4:
 410:Src/main.c    **** 
 411:Src/main.c    ****   /*Configure GPIO pin Output Level */
 412:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  92              		.loc 1 412 3 view .LVU18
  93 0048 DFF85080 		ldr	r8, .L3+8
  94 004c 2246     		mov	r2, r4
  95 004e 4FF40051 		mov	r1, #8192
  96 0052 4046     		mov	r0, r8
  97 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
  98              	.LVL0:
 413:Src/main.c    **** 
 414:Src/main.c    ****   /*Configure GPIO pin Output Level */
 415:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_4|GPIO_PIN_5, GPIO_PIN_RESET);
  99              		.loc 1 415 3 view .LVU19
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 10


 100 0058 0F4D     		ldr	r5, .L3+4
 101 005a 2246     		mov	r2, r4
 102 005c 3021     		movs	r1, #48
 103 005e 2846     		mov	r0, r5
 104 0060 FFF7FEFF 		bl	HAL_GPIO_WritePin
 105              	.LVL1:
 416:Src/main.c    **** 
 417:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 418:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 106              		.loc 1 418 3 view .LVU20
 107              		.loc 1 418 23 is_stmt 0 view .LVU21
 108 0064 4FF40053 		mov	r3, #8192
 109 0068 0493     		str	r3, [sp, #16]
 419:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 110              		.loc 1 419 3 is_stmt 1 view .LVU22
 111              		.loc 1 419 24 is_stmt 0 view .LVU23
 112 006a 0127     		movs	r7, #1
 113 006c 0597     		str	r7, [sp, #20]
 420:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 114              		.loc 1 420 3 is_stmt 1 view .LVU24
 115              		.loc 1 420 24 is_stmt 0 view .LVU25
 116 006e 0694     		str	r4, [sp, #24]
 421:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 117              		.loc 1 421 3 is_stmt 1 view .LVU26
 118              		.loc 1 421 25 is_stmt 0 view .LVU27
 119 0070 0226     		movs	r6, #2
 120 0072 0796     		str	r6, [sp, #28]
 422:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 121              		.loc 1 422 3 is_stmt 1 view .LVU28
 122 0074 04A9     		add	r1, sp, #16
 123 0076 4046     		mov	r0, r8
 124 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 125              	.LVL2:
 423:Src/main.c    **** 
 424:Src/main.c    ****   /*Configure GPIO pins : PB4 PB5 */
 425:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_5;
 126              		.loc 1 425 3 view .LVU29
 127              		.loc 1 425 23 is_stmt 0 view .LVU30
 128 007c 3023     		movs	r3, #48
 129 007e 0493     		str	r3, [sp, #16]
 426:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 130              		.loc 1 426 3 is_stmt 1 view .LVU31
 131              		.loc 1 426 24 is_stmt 0 view .LVU32
 132 0080 0597     		str	r7, [sp, #20]
 427:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 133              		.loc 1 427 3 is_stmt 1 view .LVU33
 134              		.loc 1 427 24 is_stmt 0 view .LVU34
 135 0082 0694     		str	r4, [sp, #24]
 428:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 136              		.loc 1 428 3 is_stmt 1 view .LVU35
 137              		.loc 1 428 25 is_stmt 0 view .LVU36
 138 0084 0796     		str	r6, [sp, #28]
 429:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 139              		.loc 1 429 3 is_stmt 1 view .LVU37
 140 0086 04A9     		add	r1, sp, #16
 141 0088 2846     		mov	r0, r5
 142 008a FFF7FEFF 		bl	HAL_GPIO_Init
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 11


 143              	.LVL3:
 430:Src/main.c    **** 
 431:Src/main.c    **** }
 144              		.loc 1 431 1 is_stmt 0 view .LVU38
 145 008e 08B0     		add	sp, sp, #32
 146              	.LCFI2:
 147              		.cfi_def_cfa_offset 24
 148              		@ sp needed
 149 0090 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 150              	.L4:
 151              		.align	2
 152              	.L3:
 153 0094 00100240 		.word	1073876992
 154 0098 000C0140 		.word	1073810432
 155 009c 00100140 		.word	1073811456
 156              		.cfi_endproc
 157              	.LFE72:
 159              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 160              		.align	1
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 164              		.fpu softvfp
 166              	MX_USART1_UART_Init:
 167              	.LFB71:
 370:Src/main.c    **** 
 168              		.loc 1 370 1 is_stmt 1 view -0
 169              		.cfi_startproc
 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172 0000 08B5     		push	{r3, lr}
 173              	.LCFI3:
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 379:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 177              		.loc 1 379 3 view .LVU40
 379:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 178              		.loc 1 379 19 is_stmt 0 view .LVU41
 179 0002 0848     		ldr	r0, .L7
 180 0004 084B     		ldr	r3, .L7+4
 181 0006 0360     		str	r3, [r0]
 380:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 182              		.loc 1 380 3 is_stmt 1 view .LVU42
 380:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 183              		.loc 1 380 24 is_stmt 0 view .LVU43
 184 0008 4FF4E133 		mov	r3, #115200
 185 000c 4360     		str	r3, [r0, #4]
 381:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 186              		.loc 1 381 3 is_stmt 1 view .LVU44
 381:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 187              		.loc 1 381 26 is_stmt 0 view .LVU45
 188 000e 0023     		movs	r3, #0
 189 0010 8360     		str	r3, [r0, #8]
 382:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 190              		.loc 1 382 3 is_stmt 1 view .LVU46
 382:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 12


 191              		.loc 1 382 24 is_stmt 0 view .LVU47
 192 0012 C360     		str	r3, [r0, #12]
 383:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 193              		.loc 1 383 3 is_stmt 1 view .LVU48
 383:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 194              		.loc 1 383 22 is_stmt 0 view .LVU49
 195 0014 0361     		str	r3, [r0, #16]
 384:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 196              		.loc 1 384 3 is_stmt 1 view .LVU50
 384:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 197              		.loc 1 384 20 is_stmt 0 view .LVU51
 198 0016 0C22     		movs	r2, #12
 199 0018 4261     		str	r2, [r0, #20]
 385:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 200              		.loc 1 385 3 is_stmt 1 view .LVU52
 385:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 201              		.loc 1 385 25 is_stmt 0 view .LVU53
 202 001a 8361     		str	r3, [r0, #24]
 386:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 203              		.loc 1 386 3 is_stmt 1 view .LVU54
 386:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 204              		.loc 1 386 28 is_stmt 0 view .LVU55
 205 001c C361     		str	r3, [r0, #28]
 387:Src/main.c    ****   {
 206              		.loc 1 387 3 is_stmt 1 view .LVU56
 387:Src/main.c    ****   {
 207              		.loc 1 387 7 is_stmt 0 view .LVU57
 208 001e FFF7FEFF 		bl	HAL_UART_Init
 209              	.LVL4:
 395:Src/main.c    **** 
 210              		.loc 1 395 1 view .LVU58
 211 0022 08BD     		pop	{r3, pc}
 212              	.L8:
 213              		.align	2
 214              	.L7:
 215 0024 00000000 		.word	huart1
 216 0028 00380140 		.word	1073821696
 217              		.cfi_endproc
 218              	.LFE71:
 220              		.section	.text.MX_ADC1_Init,"ax",%progbits
 221              		.align	1
 222              		.syntax unified
 223              		.thumb
 224              		.thumb_func
 225              		.fpu softvfp
 227              	MX_ADC1_Init:
 228              	.LFB68:
 228:Src/main.c    **** 
 229              		.loc 1 228 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 16
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233 0000 70B5     		push	{r4, r5, r6, lr}
 234              	.LCFI4:
 235              		.cfi_def_cfa_offset 16
 236              		.cfi_offset 4, -16
 237              		.cfi_offset 5, -12
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 13


 238              		.cfi_offset 6, -8
 239              		.cfi_offset 14, -4
 240 0002 84B0     		sub	sp, sp, #16
 241              	.LCFI5:
 242              		.cfi_def_cfa_offset 32
 234:Src/main.c    **** 
 243              		.loc 1 234 3 view .LVU60
 234:Src/main.c    **** 
 244              		.loc 1 234 26 is_stmt 0 view .LVU61
 245 0004 0025     		movs	r5, #0
 246 0006 0195     		str	r5, [sp, #4]
 247 0008 0295     		str	r5, [sp, #8]
 248 000a 0395     		str	r5, [sp, #12]
 241:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 249              		.loc 1 241 3 is_stmt 1 view .LVU62
 241:Src/main.c    ****   hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;
 250              		.loc 1 241 18 is_stmt 0 view .LVU63
 251 000c 0C4C     		ldr	r4, .L11
 252 000e 0D4B     		ldr	r3, .L11+4
 253 0010 2360     		str	r3, [r4]
 242:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 254              		.loc 1 242 3 is_stmt 1 view .LVU64
 242:Src/main.c    ****   hadc1.Init.ContinuousConvMode = DISABLE;
 255              		.loc 1 242 27 is_stmt 0 view .LVU65
 256 0012 A560     		str	r5, [r4, #8]
 243:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 257              		.loc 1 243 3 is_stmt 1 view .LVU66
 243:Src/main.c    ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 258              		.loc 1 243 33 is_stmt 0 view .LVU67
 259 0014 E560     		str	r5, [r4, #12]
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 260              		.loc 1 244 3 is_stmt 1 view .LVU68
 244:Src/main.c    ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 261              		.loc 1 244 36 is_stmt 0 view .LVU69
 262 0016 6561     		str	r5, [r4, #20]
 245:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 263              		.loc 1 245 3 is_stmt 1 view .LVU70
 245:Src/main.c    ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 264              		.loc 1 245 31 is_stmt 0 view .LVU71
 265 0018 4FF46023 		mov	r3, #917504
 266 001c E361     		str	r3, [r4, #28]
 246:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 267              		.loc 1 246 3 is_stmt 1 view .LVU72
 246:Src/main.c    ****   hadc1.Init.NbrOfConversion = 1;
 268              		.loc 1 246 24 is_stmt 0 view .LVU73
 269 001e 6560     		str	r5, [r4, #4]
 247:Src/main.c    ****   //hadc1.Init.EOCSelection = DISABLE; //not generated
 270              		.loc 1 247 3 is_stmt 1 view .LVU74
 247:Src/main.c    ****   //hadc1.Init.EOCSelection = DISABLE; //not generated
 271              		.loc 1 247 30 is_stmt 0 view .LVU75
 272 0020 0126     		movs	r6, #1
 273 0022 2661     		str	r6, [r4, #16]
 249:Src/main.c    ****   {
 274              		.loc 1 249 3 is_stmt 1 view .LVU76
 249:Src/main.c    ****   {
 275              		.loc 1 249 7 is_stmt 0 view .LVU77
 276 0024 2046     		mov	r0, r4
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 14


 277 0026 FFF7FEFF 		bl	HAL_ADC_Init
 278              	.LVL5:
 255:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 279              		.loc 1 255 3 is_stmt 1 view .LVU78
 255:Src/main.c    ****   sConfig.Rank = ADC_REGULAR_RANK_1;
 280              		.loc 1 255 19 is_stmt 0 view .LVU79
 281 002a 0323     		movs	r3, #3
 282 002c 0193     		str	r3, [sp, #4]
 256:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 283              		.loc 1 256 3 is_stmt 1 view .LVU80
 256:Src/main.c    ****   sConfig.SamplingTime = ADC_SAMPLETIME_1CYCLE_5;
 284              		.loc 1 256 16 is_stmt 0 view .LVU81
 285 002e 0296     		str	r6, [sp, #8]
 257:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 286              		.loc 1 257 3 is_stmt 1 view .LVU82
 257:Src/main.c    ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 287              		.loc 1 257 24 is_stmt 0 view .LVU83
 288 0030 0395     		str	r5, [sp, #12]
 258:Src/main.c    ****   {
 289              		.loc 1 258 3 is_stmt 1 view .LVU84
 258:Src/main.c    ****   {
 290              		.loc 1 258 7 is_stmt 0 view .LVU85
 291 0032 01A9     		add	r1, sp, #4
 292 0034 2046     		mov	r0, r4
 293 0036 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 294              	.LVL6:
 266:Src/main.c    **** 
 295              		.loc 1 266 1 view .LVU86
 296 003a 04B0     		add	sp, sp, #16
 297              	.LCFI6:
 298              		.cfi_def_cfa_offset 16
 299              		@ sp needed
 300 003c 70BD     		pop	{r4, r5, r6, pc}
 301              	.L12:
 302 003e 00BF     		.align	2
 303              	.L11:
 304 0040 00000000 		.word	hadc1
 305 0044 00240140 		.word	1073816576
 306              		.cfi_endproc
 307              	.LFE68:
 309              		.section	.text.MX_TIM2_Init,"ax",%progbits
 310              		.align	1
 311              		.syntax unified
 312              		.thumb
 313              		.thumb_func
 314              		.fpu softvfp
 316              	MX_TIM2_Init:
 317              	.LFB69:
 274:Src/main.c    **** 
 318              		.loc 1 274 1 is_stmt 1 view -0
 319              		.cfi_startproc
 320              		@ args = 0, pretend = 0, frame = 24
 321              		@ frame_needed = 0, uses_anonymous_args = 0
 322 0000 30B5     		push	{r4, r5, lr}
 323              	.LCFI7:
 324              		.cfi_def_cfa_offset 12
 325              		.cfi_offset 4, -12
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 15


 326              		.cfi_offset 5, -8
 327              		.cfi_offset 14, -4
 328 0002 87B0     		sub	sp, sp, #28
 329              	.LCFI8:
 330              		.cfi_def_cfa_offset 40
 280:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 331              		.loc 1 280 3 view .LVU88
 280:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 332              		.loc 1 280 26 is_stmt 0 view .LVU89
 333 0004 0024     		movs	r4, #0
 334 0006 0294     		str	r4, [sp, #8]
 335 0008 0394     		str	r4, [sp, #12]
 336 000a 0494     		str	r4, [sp, #16]
 337 000c 0594     		str	r4, [sp, #20]
 281:Src/main.c    **** 
 338              		.loc 1 281 3 is_stmt 1 view .LVU90
 281:Src/main.c    **** 
 339              		.loc 1 281 27 is_stmt 0 view .LVU91
 340 000e 0094     		str	r4, [sp]
 341 0010 0194     		str	r4, [sp, #4]
 286:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 342              		.loc 1 286 3 is_stmt 1 view .LVU92
 286:Src/main.c    ****   htim2.Init.Prescaler = 200-1;
 343              		.loc 1 286 18 is_stmt 0 view .LVU93
 344 0012 154D     		ldr	r5, .L15
 345 0014 4FF08043 		mov	r3, #1073741824
 346 0018 2B60     		str	r3, [r5]
 287:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_DOWN;
 347              		.loc 1 287 3 is_stmt 1 view .LVU94
 287:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_DOWN;
 348              		.loc 1 287 24 is_stmt 0 view .LVU95
 349 001a C723     		movs	r3, #199
 350 001c 6B60     		str	r3, [r5, #4]
 288:Src/main.c    ****   htim2.Init.Period = 40000;
 351              		.loc 1 288 3 is_stmt 1 view .LVU96
 288:Src/main.c    ****   htim2.Init.Period = 40000;
 352              		.loc 1 288 26 is_stmt 0 view .LVU97
 353 001e 1023     		movs	r3, #16
 354 0020 AB60     		str	r3, [r5, #8]
 289:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 355              		.loc 1 289 3 is_stmt 1 view .LVU98
 289:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 356              		.loc 1 289 21 is_stmt 0 view .LVU99
 357 0022 49F64043 		movw	r3, #40000
 358 0026 EB60     		str	r3, [r5, #12]
 290:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 359              		.loc 1 290 3 is_stmt 1 view .LVU100
 290:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 360              		.loc 1 290 28 is_stmt 0 view .LVU101
 361 0028 2C61     		str	r4, [r5, #16]
 291:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 362              		.loc 1 291 3 is_stmt 1 view .LVU102
 291:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 363              		.loc 1 291 32 is_stmt 0 view .LVU103
 364 002a AC61     		str	r4, [r5, #24]
 292:Src/main.c    ****   {
 365              		.loc 1 292 3 is_stmt 1 view .LVU104
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 16


 292:Src/main.c    ****   {
 366              		.loc 1 292 7 is_stmt 0 view .LVU105
 367 002c 2846     		mov	r0, r5
 368 002e FFF7FEFF 		bl	HAL_TIM_OC_Init
 369              	.LVL7:
 296:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 370              		.loc 1 296 3 is_stmt 1 view .LVU106
 296:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 371              		.loc 1 296 34 is_stmt 0 view .LVU107
 372 0032 4FF48053 		mov	r3, #4096
 373 0036 0293     		str	r3, [sp, #8]
 297:Src/main.c    ****   {
 374              		.loc 1 297 3 is_stmt 1 view .LVU108
 297:Src/main.c    ****   {
 375              		.loc 1 297 7 is_stmt 0 view .LVU109
 376 0038 02A9     		add	r1, sp, #8
 377 003a 2846     		mov	r0, r5
 378 003c FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 379              	.LVL8:
 301:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 380              		.loc 1 301 3 is_stmt 1 view .LVU110
 301:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 381              		.loc 1 301 37 is_stmt 0 view .LVU111
 382 0040 0094     		str	r4, [sp]
 302:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 383              		.loc 1 302 3 is_stmt 1 view .LVU112
 302:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 384              		.loc 1 302 33 is_stmt 0 view .LVU113
 385 0042 0194     		str	r4, [sp, #4]
 303:Src/main.c    ****   {
 386              		.loc 1 303 3 is_stmt 1 view .LVU114
 303:Src/main.c    ****   {
 387              		.loc 1 303 7 is_stmt 0 view .LVU115
 388 0044 6946     		mov	r1, sp
 389 0046 2846     		mov	r0, r5
 390 0048 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 391              	.LVL9:
 309:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 392              		.loc 1 309 3 is_stmt 1 view .LVU116
 393 004c 2246     		mov	r2, r4
 394 004e 2146     		mov	r1, r4
 395 0050 0820     		movs	r0, #8
 396 0052 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 397              	.LVL10:
 310:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim2);
 398              		.loc 1 310 3 view .LVU117
 399 0056 0820     		movs	r0, #8
 400 0058 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 401              	.LVL11:
 311:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 402              		.loc 1 311 3 view .LVU118
 403 005c 2846     		mov	r0, r5
 404 005e FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 405              	.LVL12:
 314:Src/main.c    **** 
 406              		.loc 1 314 1 is_stmt 0 view .LVU119
 407 0062 07B0     		add	sp, sp, #28
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 17


 408              	.LCFI9:
 409              		.cfi_def_cfa_offset 12
 410              		@ sp needed
 411 0064 30BD     		pop	{r4, r5, pc}
 412              	.L16:
 413 0066 00BF     		.align	2
 414              	.L15:
 415 0068 00000000 		.word	htim2
 416              		.cfi_endproc
 417              	.LFE69:
 419              		.section	.text.MX_TIM3_Init,"ax",%progbits
 420              		.align	1
 421              		.syntax unified
 422              		.thumb
 423              		.thumb_func
 424              		.fpu softvfp
 426              	MX_TIM3_Init:
 427              	.LFB70:
 322:Src/main.c    **** 
 428              		.loc 1 322 1 is_stmt 1 view -0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 24
 431              		@ frame_needed = 0, uses_anonymous_args = 0
 432 0000 30B5     		push	{r4, r5, lr}
 433              	.LCFI10:
 434              		.cfi_def_cfa_offset 12
 435              		.cfi_offset 4, -12
 436              		.cfi_offset 5, -8
 437              		.cfi_offset 14, -4
 438 0002 87B0     		sub	sp, sp, #28
 439              	.LCFI11:
 440              		.cfi_def_cfa_offset 40
 328:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 441              		.loc 1 328 3 view .LVU121
 328:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 442              		.loc 1 328 26 is_stmt 0 view .LVU122
 443 0004 0024     		movs	r4, #0
 444 0006 0294     		str	r4, [sp, #8]
 445 0008 0394     		str	r4, [sp, #12]
 446 000a 0494     		str	r4, [sp, #16]
 447 000c 0594     		str	r4, [sp, #20]
 329:Src/main.c    **** 
 448              		.loc 1 329 3 is_stmt 1 view .LVU123
 329:Src/main.c    **** 
 449              		.loc 1 329 27 is_stmt 0 view .LVU124
 450 000e 0094     		str	r4, [sp]
 451 0010 0194     		str	r4, [sp, #4]
 334:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 452              		.loc 1 334 3 is_stmt 1 view .LVU125
 334:Src/main.c    ****   htim3.Init.Prescaler = 200-1;
 453              		.loc 1 334 18 is_stmt 0 view .LVU126
 454 0012 144D     		ldr	r5, .L19
 455 0014 144B     		ldr	r3, .L19+4
 456 0016 2B60     		str	r3, [r5]
 335:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_DOWN;
 457              		.loc 1 335 3 is_stmt 1 view .LVU127
 335:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_DOWN;
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 18


 458              		.loc 1 335 24 is_stmt 0 view .LVU128
 459 0018 C723     		movs	r3, #199
 460 001a 6B60     		str	r3, [r5, #4]
 336:Src/main.c    ****   htim3.Init.Period = 400/2;
 461              		.loc 1 336 3 is_stmt 1 view .LVU129
 336:Src/main.c    ****   htim3.Init.Period = 400/2;
 462              		.loc 1 336 26 is_stmt 0 view .LVU130
 463 001c 1023     		movs	r3, #16
 464 001e AB60     		str	r3, [r5, #8]
 337:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 465              		.loc 1 337 3 is_stmt 1 view .LVU131
 337:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 466              		.loc 1 337 21 is_stmt 0 view .LVU132
 467 0020 C823     		movs	r3, #200
 468 0022 EB60     		str	r3, [r5, #12]
 338:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 469              		.loc 1 338 3 is_stmt 1 view .LVU133
 338:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 470              		.loc 1 338 28 is_stmt 0 view .LVU134
 471 0024 2C61     		str	r4, [r5, #16]
 339:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 472              		.loc 1 339 3 is_stmt 1 view .LVU135
 339:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 473              		.loc 1 339 32 is_stmt 0 view .LVU136
 474 0026 AC61     		str	r4, [r5, #24]
 340:Src/main.c    ****   {
 475              		.loc 1 340 3 is_stmt 1 view .LVU137
 340:Src/main.c    ****   {
 476              		.loc 1 340 7 is_stmt 0 view .LVU138
 477 0028 2846     		mov	r0, r5
 478 002a FFF7FEFF 		bl	HAL_TIM_OC_Init
 479              	.LVL13:
 344:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 480              		.loc 1 344 3 is_stmt 1 view .LVU139
 344:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 481              		.loc 1 344 34 is_stmt 0 view .LVU140
 482 002e 4FF48053 		mov	r3, #4096
 483 0032 0293     		str	r3, [sp, #8]
 345:Src/main.c    ****   {
 484              		.loc 1 345 3 is_stmt 1 view .LVU141
 345:Src/main.c    ****   {
 485              		.loc 1 345 7 is_stmt 0 view .LVU142
 486 0034 02A9     		add	r1, sp, #8
 487 0036 2846     		mov	r0, r5
 488 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 489              	.LVL14:
 349:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 490              		.loc 1 349 3 is_stmt 1 view .LVU143
 349:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 491              		.loc 1 349 37 is_stmt 0 view .LVU144
 492 003c 0094     		str	r4, [sp]
 350:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 493              		.loc 1 350 3 is_stmt 1 view .LVU145
 350:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 494              		.loc 1 350 33 is_stmt 0 view .LVU146
 495 003e 0194     		str	r4, [sp, #4]
 351:Src/main.c    ****   {
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 19


 496              		.loc 1 351 3 is_stmt 1 view .LVU147
 351:Src/main.c    ****   {
 497              		.loc 1 351 7 is_stmt 0 view .LVU148
 498 0040 6946     		mov	r1, sp
 499 0042 2846     		mov	r0, r5
 500 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 501              	.LVL15:
 357:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 502              		.loc 1 357 3 is_stmt 1 view .LVU149
 503 0048 2246     		mov	r2, r4
 504 004a 2146     		mov	r1, r4
 505 004c 0920     		movs	r0, #9
 506 004e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 507              	.LVL16:
 358:Src/main.c    ****   HAL_TIM_Base_Start_IT(&htim3);
 508              		.loc 1 358 3 view .LVU150
 509 0052 0920     		movs	r0, #9
 510 0054 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 511              	.LVL17:
 359:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 512              		.loc 1 359 3 view .LVU151
 513 0058 2846     		mov	r0, r5
 514 005a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 515              	.LVL18:
 362:Src/main.c    **** 
 516              		.loc 1 362 1 is_stmt 0 view .LVU152
 517 005e 07B0     		add	sp, sp, #28
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 12
 520              		@ sp needed
 521 0060 30BD     		pop	{r4, r5, pc}
 522              	.L20:
 523 0062 00BF     		.align	2
 524              	.L19:
 525 0064 00000000 		.word	htim3
 526 0068 00040040 		.word	1073742848
 527              		.cfi_endproc
 528              	.LFE70:
 530              		.section	.text.SystemClock_Config,"ax",%progbits
 531              		.align	1
 532              		.global	SystemClock_Config
 533              		.syntax unified
 534              		.thumb
 535              		.thumb_func
 536              		.fpu softvfp
 538              	SystemClock_Config:
 539              	.LFB67:
 186:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 540              		.loc 1 186 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		@ args = 0, pretend = 0, frame = 80
 543              		@ frame_needed = 0, uses_anonymous_args = 0
 544 0000 30B5     		push	{r4, r5, lr}
 545              	.LCFI13:
 546              		.cfi_def_cfa_offset 12
 547              		.cfi_offset 4, -12
 548              		.cfi_offset 5, -8
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 20


 549              		.cfi_offset 14, -4
 550 0002 95B0     		sub	sp, sp, #84
 551              	.LCFI14:
 552              		.cfi_def_cfa_offset 96
 187:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 553              		.loc 1 187 3 view .LVU154
 187:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 554              		.loc 1 187 22 is_stmt 0 view .LVU155
 555 0004 2422     		movs	r2, #36
 556 0006 0021     		movs	r1, #0
 557 0008 0BA8     		add	r0, sp, #44
 558 000a FFF7FEFF 		bl	memset
 559              	.LVL19:
 188:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 560              		.loc 1 188 3 is_stmt 1 view .LVU156
 188:Src/main.c    ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 561              		.loc 1 188 22 is_stmt 0 view .LVU157
 562 000e 0024     		movs	r4, #0
 563 0010 0594     		str	r4, [sp, #20]
 564 0012 0694     		str	r4, [sp, #24]
 565 0014 0794     		str	r4, [sp, #28]
 566 0016 0894     		str	r4, [sp, #32]
 567 0018 0994     		str	r4, [sp, #36]
 189:Src/main.c    **** 
 568              		.loc 1 189 3 is_stmt 1 view .LVU158
 189:Src/main.c    **** 
 569              		.loc 1 189 28 is_stmt 0 view .LVU159
 570 001a 0194     		str	r4, [sp, #4]
 571 001c 0294     		str	r4, [sp, #8]
 572 001e 0394     		str	r4, [sp, #12]
 573 0020 0494     		str	r4, [sp, #16]
 193:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 574              		.loc 1 193 3 is_stmt 1 view .LVU160
 193:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 575              		.loc 1 193 36 is_stmt 0 view .LVU161
 576 0022 0225     		movs	r5, #2
 577 0024 0A95     		str	r5, [sp, #40]
 194:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 578              		.loc 1 194 3 is_stmt 1 view .LVU162
 194:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 579              		.loc 1 194 30 is_stmt 0 view .LVU163
 580 0026 0123     		movs	r3, #1
 581 0028 0E93     		str	r3, [sp, #56]
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 582              		.loc 1 195 3 is_stmt 1 view .LVU164
 195:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 583              		.loc 1 195 41 is_stmt 0 view .LVU165
 584 002a 1023     		movs	r3, #16
 585 002c 0F93     		str	r3, [sp, #60]
 196:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 586              		.loc 1 196 3 is_stmt 1 view .LVU166
 197:Src/main.c    ****   {
 587              		.loc 1 197 3 view .LVU167
 197:Src/main.c    ****   {
 588              		.loc 1 197 7 is_stmt 0 view .LVU168
 589 002e 0AA8     		add	r0, sp, #40
 590 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 21


 591              	.LVL20:
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 592              		.loc 1 203 3 is_stmt 1 view .LVU169
 203:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 593              		.loc 1 203 31 is_stmt 0 view .LVU170
 594 0034 0F23     		movs	r3, #15
 595 0036 0593     		str	r3, [sp, #20]
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 596              		.loc 1 205 3 is_stmt 1 view .LVU171
 205:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 597              		.loc 1 205 34 is_stmt 0 view .LVU172
 598 0038 0694     		str	r4, [sp, #24]
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 599              		.loc 1 206 3 is_stmt 1 view .LVU173
 206:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 600              		.loc 1 206 35 is_stmt 0 view .LVU174
 601 003a 0794     		str	r4, [sp, #28]
 207:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 602              		.loc 1 207 3 is_stmt 1 view .LVU175
 207:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 603              		.loc 1 207 36 is_stmt 0 view .LVU176
 604 003c 0894     		str	r4, [sp, #32]
 208:Src/main.c    **** 
 605              		.loc 1 208 3 is_stmt 1 view .LVU177
 208:Src/main.c    **** 
 606              		.loc 1 208 36 is_stmt 0 view .LVU178
 607 003e 0994     		str	r4, [sp, #36]
 210:Src/main.c    ****   {
 608              		.loc 1 210 3 is_stmt 1 view .LVU179
 210:Src/main.c    ****   {
 609              		.loc 1 210 7 is_stmt 0 view .LVU180
 610 0040 2146     		mov	r1, r4
 611 0042 05A8     		add	r0, sp, #20
 612 0044 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 613              	.LVL21:
 214:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 614              		.loc 1 214 3 is_stmt 1 view .LVU181
 214:Src/main.c    ****   PeriphClkInit.AdcClockSelection = RCC_ADCPCLK2_DIV2;
 615              		.loc 1 214 38 is_stmt 0 view .LVU182
 616 0048 0195     		str	r5, [sp, #4]
 215:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 617              		.loc 1 215 3 is_stmt 1 view .LVU183
 215:Src/main.c    ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 618              		.loc 1 215 35 is_stmt 0 view .LVU184
 619 004a 0394     		str	r4, [sp, #12]
 216:Src/main.c    ****   {
 620              		.loc 1 216 3 is_stmt 1 view .LVU185
 216:Src/main.c    ****   {
 621              		.loc 1 216 7 is_stmt 0 view .LVU186
 622 004c 01A8     		add	r0, sp, #4
 623 004e FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 624              	.LVL22:
 220:Src/main.c    **** 
 625              		.loc 1 220 1 view .LVU187
 626 0052 15B0     		add	sp, sp, #84
 627              	.LCFI15:
 628              		.cfi_def_cfa_offset 12
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 22


 629              		@ sp needed
 630 0054 30BD     		pop	{r4, r5, pc}
 631              		.cfi_endproc
 632              	.LFE67:
 634              		.global	__aeabi_i2d
 635              		.global	__aeabi_dmul
 636              		.global	__aeabi_dadd
 637              		.global	__aeabi_d2iz
 638              		.section	.text.main,"ax",%progbits
 639              		.align	1
 640              		.global	main
 641              		.syntax unified
 642              		.thumb
 643              		.thumb_func
 644              		.fpu softvfp
 646              	main:
 647              	.LFB66:
 103:Src/main.c    ****   /* USER CODE BEGIN 1 */
 648              		.loc 1 103 1 is_stmt 1 view -0
 649              		.cfi_startproc
 650              		@ Volatile: function does not return.
 651              		@ args = 0, pretend = 0, frame = 8
 652              		@ frame_needed = 0, uses_anonymous_args = 0
 653 0000 00B5     		push	{lr}
 654              	.LCFI16:
 655              		.cfi_def_cfa_offset 4
 656              		.cfi_offset 14, -4
 657 0002 83B0     		sub	sp, sp, #12
 658              	.LCFI17:
 659              		.cfi_def_cfa_offset 16
 111:Src/main.c    **** 
 660              		.loc 1 111 3 view .LVU189
 661 0004 FFF7FEFF 		bl	HAL_Init
 662              	.LVL23:
 118:Src/main.c    **** 
 663              		.loc 1 118 3 view .LVU190
 664 0008 FFF7FEFF 		bl	SystemClock_Config
 665              	.LVL24:
 125:Src/main.c    ****   MX_USART1_UART_Init();
 666              		.loc 1 125 3 view .LVU191
 667 000c FFF7FEFF 		bl	MX_GPIO_Init
 668              	.LVL25:
 126:Src/main.c    ****   MX_ADC1_Init();
 669              		.loc 1 126 3 view .LVU192
 670 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 671              	.LVL26:
 127:Src/main.c    ****   MX_TIM2_Init();
 672              		.loc 1 127 3 view .LVU193
 673 0014 FFF7FEFF 		bl	MX_ADC1_Init
 674              	.LVL27:
 128:Src/main.c    ****   MX_TIM3_Init();
 675              		.loc 1 128 3 view .LVU194
 676 0018 FFF7FEFF 		bl	MX_TIM2_Init
 677              	.LVL28:
 129:Src/main.c    ****   /* USER CODE BEGIN 2 */
 678              		.loc 1 129 3 view .LVU195
 679 001c FFF7FEFF 		bl	MX_TIM3_Init
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 23


 680              	.LVL29:
 681 0020 3DE0     		b	.L30
 682              	.L32:
 683              	.LBB5:
 143:Src/main.c    ****         }
 684              		.loc 1 143 13 view .LVU196
 143:Src/main.c    ****         }
 685              		.loc 1 143 24 is_stmt 0 view .LVU197
 686 0022 2046     		mov	r0, r4
 687 0024 FFF7FEFF 		bl	HAL_ADC_GetValue
 688              	.LVL30:
 143:Src/main.c    ****         }
 689              		.loc 1 143 22 view .LVU198
 690 0028 3B4B     		ldr	r3, .L35+8
 691 002a 1860     		str	r0, [r3]
 692 002c 42E0     		b	.L24
 693              	.L33:
 157:Src/main.c    **** 	  else freq2--;
 694              		.loc 1 157 24 is_stmt 1 discriminator 1 view .LVU199
 157:Src/main.c    **** 	  else freq2--;
 695              		.loc 1 157 29 is_stmt 0 discriminator 1 view .LVU200
 696 002e 3B4A     		ldr	r2, .L35+12
 697 0030 1368     		ldr	r3, [r2]
 698 0032 0133     		adds	r3, r3, #1
 699 0034 1360     		str	r3, [r2]
 700 0036 60E0     		b	.L27
 701              	.L34:
 159:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 702              		.loc 1 159 22 is_stmt 1 discriminator 1 view .LVU201
 159:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 703              		.loc 1 159 32 is_stmt 0 discriminator 1 view .LVU202
 704 0038 394A     		ldr	r2, .L35+16
 705 003a 0021     		movs	r1, #0
 706 003c 1160     		str	r1, [r2]
 707 003e 60E0     		b	.L28
 708              	.L29:
 161:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 709              		.loc 1 161 4 is_stmt 1 view .LVU203
 161:Src/main.c    **** 	  HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 710              		.loc 1 161 10 is_stmt 0 view .LVU204
 711 0040 384B     		ldr	r3, .L35+20
 712 0042 0022     		movs	r2, #0
 713 0044 1A60     		str	r2, [r3]
 162:Src/main.c    ****     }
 714              		.loc 1 162 4 is_stmt 1 view .LVU205
 715 0046 4FF40051 		mov	r1, #8192
 716 004a 3748     		ldr	r0, .L35+24
 717 004c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 718              	.LVL31:
 719              	.L25:
 165:Src/main.c    **** 	
 720              		.loc 1 165 2 view .LVU206
 165:Src/main.c    **** 	
 721              		.loc 1 165 17 is_stmt 0 view .LVU207
 722 0050 324B     		ldr	r3, .L35+12
 723 0052 1968     		ldr	r1, [r3]
 724 0054 49F64043 		movw	r3, #40000
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 24


 725 0058 93FBF1F3 		sdiv	r3, r3, r1
 165:Src/main.c    **** 	
 726              		.loc 1 165 9 view .LVU208
 727 005c 334A     		ldr	r2, .L35+28
 728 005e 1360     		str	r3, [r2]
 167:Src/main.c    **** 	TIM3->ARR = delay2/2;
 729              		.loc 1 167 2 is_stmt 1 view .LVU209
 167:Src/main.c    **** 	TIM3->ARR = delay2/2;
 730              		.loc 1 167 19 is_stmt 0 view .LVU210
 731 0060 334A     		ldr	r2, .L35+32
 732 0062 1268     		ldr	r2, [r2]
 733 0064 02EBD272 		add	r2, r2, r2, lsr #31
 734 0068 5210     		asrs	r2, r2, #1
 167:Src/main.c    **** 	TIM3->ARR = delay2/2;
 735              		.loc 1 167 12 view .LVU211
 736 006a 4FF08040 		mov	r0, #1073741824
 737 006e C262     		str	r2, [r0, #44]
 168:Src/main.c    **** 	
 738              		.loc 1 168 2 is_stmt 1 view .LVU212
 168:Src/main.c    **** 	
 739              		.loc 1 168 20 is_stmt 0 view .LVU213
 740 0070 03EBD373 		add	r3, r3, r3, lsr #31
 741 0074 5B10     		asrs	r3, r3, #1
 168:Src/main.c    **** 	
 742              		.loc 1 168 12 view .LVU214
 743 0076 2F4A     		ldr	r2, .L35+36
 744 0078 D362     		str	r3, [r2, #44]
 170:Src/main.c    **** 	data[0] = (freq>>8) & 0xFF;
 745              		.loc 1 170 2 is_stmt 1 view .LVU215
 171:Src/main.c    **** 	data[1] = 0xFF;
 746              		.loc 1 171 2 view .LVU216
 171:Src/main.c    **** 	data[1] = 0xFF;
 747              		.loc 1 171 17 is_stmt 0 view .LVU217
 748 007a 2F4B     		ldr	r3, .L35+40
 749 007c 1B68     		ldr	r3, [r3]
 750 007e 1B12     		asrs	r3, r3, #8
 171:Src/main.c    **** 	data[1] = 0xFF;
 751              		.loc 1 171 10 view .LVU218
 752 0080 8DF80430 		strb	r3, [sp, #4]
 172:Src/main.c    **** 	data[1] = (freq2>>0) & 0xFF;
 753              		.loc 1 172 2 is_stmt 1 view .LVU219
 173:Src/main.c    **** 	data[2] = 0xFF;
 754              		.loc 1 173 2 view .LVU220
 173:Src/main.c    **** 	data[2] = 0xFF;
 755              		.loc 1 173 10 is_stmt 0 view .LVU221
 756 0084 8DF80510 		strb	r1, [sp, #5]
 174:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 757              		.loc 1 174 2 is_stmt 1 view .LVU222
 174:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data, sizeof(data), 1000);
 758              		.loc 1 174 10 is_stmt 0 view .LVU223
 759 0088 FF23     		movs	r3, #255
 760 008a 8DF80630 		strb	r3, [sp, #6]
 175:Src/main.c    ****     /* USER CODE BEGIN 3 */
 761              		.loc 1 175 2 is_stmt 1 view .LVU224
 762 008e 4FF47A73 		mov	r3, #1000
 763 0092 0422     		movs	r2, #4
 764 0094 0DEB0201 		add	r1, sp, r2
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 25


 765 0098 2848     		ldr	r0, .L35+44
 766 009a FFF7FEFF 		bl	HAL_UART_Transmit
 767              	.LVL32:
 768              	.L30:
 769              	.LBE5:
 136:Src/main.c    ****   {
 770              		.loc 1 136 3 view .LVU225
 771              	.LBB6:
 139:Src/main.c    **** 	
 772              		.loc 1 139 2 view .LVU226
 773 009e 284C     		ldr	r4, .L35+48
 774 00a0 2046     		mov	r0, r4
 775 00a2 FFF7FEFF 		bl	HAL_ADC_Start
 776              	.LVL33:
 141:Src/main.c    ****         {
 777              		.loc 1 141 2 view .LVU227
 141:Src/main.c    ****         {
 778              		.loc 1 141 6 is_stmt 0 view .LVU228
 779 00a6 4FF47A71 		mov	r1, #1000
 780 00aa 2046     		mov	r0, r4
 781 00ac FFF7FEFF 		bl	HAL_ADC_PollForConversion
 782              	.LVL34:
 141:Src/main.c    ****         {
 783              		.loc 1 141 5 view .LVU229
 784 00b0 0028     		cmp	r0, #0
 785 00b2 B6D0     		beq	.L32
 786              	.L24:
 152:Src/main.c    **** 	delay = 40000 / freq;
 787              		.loc 1 152 2 is_stmt 1 view .LVU230
 152:Src/main.c    **** 	delay = 40000 / freq;
 788              		.loc 1 152 21 is_stmt 0 view .LVU231
 789 00b4 184B     		ldr	r3, .L35+8
 790 00b6 1868     		ldr	r0, [r3]
 791 00b8 FFF7FEFF 		bl	__aeabi_i2d
 792              	.LVL35:
 793 00bc 14A3     		adr	r3, .L35
 794 00be D3E90023 		ldrd	r2, [r3]
 795 00c2 FFF7FEFF 		bl	__aeabi_dmul
 796              	.LVL36:
 152:Src/main.c    **** 	delay = 40000 / freq;
 797              		.loc 1 152 12 view .LVU232
 798 00c6 0022     		movs	r2, #0
 799 00c8 1E4B     		ldr	r3, .L35+52
 800 00ca FFF7FEFF 		bl	__aeabi_dadd
 801              	.LVL37:
 152:Src/main.c    **** 	delay = 40000 / freq;
 802              		.loc 1 152 7 view .LVU233
 803 00ce FFF7FEFF 		bl	__aeabi_d2iz
 804              	.LVL38:
 805 00d2 194B     		ldr	r3, .L35+40
 806 00d4 1860     		str	r0, [r3]
 153:Src/main.c    **** 	
 807              		.loc 1 153 2 is_stmt 1 view .LVU234
 153:Src/main.c    **** 	
 808              		.loc 1 153 16 is_stmt 0 view .LVU235
 809 00d6 49F64043 		movw	r3, #40000
 810 00da 93FBF0F3 		sdiv	r3, r3, r0
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 26


 153:Src/main.c    **** 	
 811              		.loc 1 153 8 view .LVU236
 812 00de 144A     		ldr	r2, .L35+32
 813 00e0 1360     		str	r3, [r2]
 155:Src/main.c    ****     {
 814              		.loc 1 155 2 is_stmt 1 view .LVU237
 155:Src/main.c    ****     {
 815              		.loc 1 155 12 is_stmt 0 view .LVU238
 816 00e2 104B     		ldr	r3, .L35+20
 817 00e4 1B68     		ldr	r3, [r3]
 155:Src/main.c    ****     {
 818              		.loc 1 155 5 view .LVU239
 819 00e6 022B     		cmp	r3, #2
 820 00e8 B2D1     		bne	.L25
 157:Src/main.c    **** 	  else freq2--;
 821              		.loc 1 157 4 is_stmt 1 view .LVU240
 157:Src/main.c    **** 	  else freq2--;
 822              		.loc 1 157 18 is_stmt 0 view .LVU241
 823 00ea 0D4B     		ldr	r3, .L35+16
 824 00ec 1B68     		ldr	r3, [r3]
 157:Src/main.c    **** 	  else freq2--;
 825              		.loc 1 157 7 view .LVU242
 826 00ee 012B     		cmp	r3, #1
 827 00f0 9DD0     		beq	.L33
 158:Src/main.c    **** 	  if (freq2 == 150) direction = 0;
 828              		.loc 1 158 9 is_stmt 1 view .LVU243
 158:Src/main.c    **** 	  if (freq2 == 150) direction = 0;
 829              		.loc 1 158 14 is_stmt 0 view .LVU244
 830 00f2 0A4A     		ldr	r2, .L35+12
 831 00f4 1368     		ldr	r3, [r2]
 832 00f6 013B     		subs	r3, r3, #1
 833 00f8 1360     		str	r3, [r2]
 834              	.L27:
 159:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 835              		.loc 1 159 4 is_stmt 1 view .LVU245
 159:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 836              		.loc 1 159 14 is_stmt 0 view .LVU246
 837 00fa 084B     		ldr	r3, .L35+12
 838 00fc 1B68     		ldr	r3, [r3]
 159:Src/main.c    **** 	  if (freq2 == 50) direction = 1;
 839              		.loc 1 159 7 view .LVU247
 840 00fe 962B     		cmp	r3, #150
 841 0100 9AD0     		beq	.L34
 842              	.L28:
 160:Src/main.c    **** 	  count = 0;
 843              		.loc 1 160 4 is_stmt 1 view .LVU248
 160:Src/main.c    **** 	  count = 0;
 844              		.loc 1 160 7 is_stmt 0 view .LVU249
 845 0102 322B     		cmp	r3, #50
 846 0104 9CD1     		bne	.L29
 160:Src/main.c    **** 	  count = 0;
 847              		.loc 1 160 21 is_stmt 1 discriminator 1 view .LVU250
 160:Src/main.c    **** 	  count = 0;
 848              		.loc 1 160 31 is_stmt 0 discriminator 1 view .LVU251
 849 0106 064B     		ldr	r3, .L35+16
 850 0108 0122     		movs	r2, #1
 851 010a 1A60     		str	r2, [r3]
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 27


 852 010c 98E7     		b	.L29
 853              	.L36:
 854 010e 00BF     		.align	3
 855              	.L35:
 856 0110 4A0C022B 		.word	721554506
 857 0114 8716993F 		.word	1066997383
 858 0118 00000000 		.word	.LANCHOR0
 859 011c 00000000 		.word	.LANCHOR5
 860 0120 00000000 		.word	.LANCHOR4
 861 0124 00000000 		.word	.LANCHOR3
 862 0128 00100140 		.word	1073811456
 863 012c 00000000 		.word	.LANCHOR6
 864 0130 00000000 		.word	.LANCHOR2
 865 0134 00040040 		.word	1073742848
 866 0138 00000000 		.word	.LANCHOR1
 867 013c 00000000 		.word	huart1
 868 0140 00000000 		.word	hadc1
 869 0144 00004940 		.word	1078525952
 870              	.LBE6:
 871              		.cfi_endproc
 872              	.LFE66:
 874              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 875              		.align	1
 876              		.global	TIM2_IRQHandler
 877              		.syntax unified
 878              		.thumb
 879              		.thumb_func
 880              		.fpu softvfp
 882              	TIM2_IRQHandler:
 883              	.LFB73:
 432:Src/main.c    **** 
 433:Src/main.c    **** /* USER CODE BEGIN 4 */
 434:Src/main.c    **** 
 435:Src/main.c    **** /* USER CODE END 4 */
 436:Src/main.c    **** 
 437:Src/main.c    **** /******************************************************************************/
 438:Src/main.c    **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 439:Src/main.c    **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 440:Src/main.c    **** /* For the available peripheral interrupt handler names,                      */
 441:Src/main.c    **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 442:Src/main.c    **** /******************************************************************************/
 443:Src/main.c    **** 
 444:Src/main.c    **** /**
 445:Src/main.c    ****   * @brief This function handles TIM2 global interrupt.
 446:Src/main.c    ****   */
 447:Src/main.c    **** void TIM2_IRQHandler(void)
 448:Src/main.c    **** {
 884              		.loc 1 448 1 is_stmt 1 view -0
 885              		.cfi_startproc
 886              		@ args = 0, pretend = 0, frame = 0
 887              		@ frame_needed = 0, uses_anonymous_args = 0
 888 0000 08B5     		push	{r3, lr}
 889              	.LCFI18:
 890              		.cfi_def_cfa_offset 8
 891              		.cfi_offset 3, -8
 892              		.cfi_offset 14, -4
 449:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 0 */
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 28


 450:Src/main.c    ****   
 451:Src/main.c    ****   //TIM2->ARR = delay;
 452:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_4);
 893              		.loc 1 452 3 view .LVU253
 894 0002 1021     		movs	r1, #16
 895 0004 0348     		ldr	r0, .L39
 896 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 897              	.LVL39:
 453:Src/main.c    ****   //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 454:Src/main.c    ****   /* USER CODE END TIM2_IRQn 0 */
 455:Src/main.c    ****   HAL_TIM_IRQHandler(&htim2);
 898              		.loc 1 455 3 view .LVU254
 899 000a 0348     		ldr	r0, .L39+4
 900 000c FFF7FEFF 		bl	HAL_TIM_IRQHandler
 901              	.LVL40:
 456:Src/main.c    ****   /* USER CODE BEGIN TIM2_IRQn 1 */
 457:Src/main.c    ****   //TIM2->ARR = delay;
 458:Src/main.c    ****   /* USER CODE END TIM2_IRQn 1 */
 459:Src/main.c    **** }
 902              		.loc 1 459 1 is_stmt 0 view .LVU255
 903 0010 08BD     		pop	{r3, pc}
 904              	.L40:
 905 0012 00BF     		.align	2
 906              	.L39:
 907 0014 000C0140 		.word	1073810432
 908 0018 00000000 		.word	htim2
 909              		.cfi_endproc
 910              	.LFE73:
 912              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 913              		.align	1
 914              		.global	TIM3_IRQHandler
 915              		.syntax unified
 916              		.thumb
 917              		.thumb_func
 918              		.fpu softvfp
 920              	TIM3_IRQHandler:
 921              	.LFB74:
 460:Src/main.c    **** 
 461:Src/main.c    **** /**
 462:Src/main.c    ****   * @brief This function handles TIM3 global interrupt.
 463:Src/main.c    ****   */
 464:Src/main.c    **** void TIM3_IRQHandler(void)
 465:Src/main.c    **** {
 922              		.loc 1 465 1 is_stmt 1 view -0
 923              		.cfi_startproc
 924              		@ args = 0, pretend = 0, frame = 0
 925              		@ frame_needed = 0, uses_anonymous_args = 0
 926 0000 08B5     		push	{r3, lr}
 927              	.LCFI19:
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 3, -8
 930              		.cfi_offset 14, -4
 466:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 467:Src/main.c    ****   HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_5);
 931              		.loc 1 467 3 view .LVU257
 932 0002 2021     		movs	r1, #32
 933 0004 0548     		ldr	r0, .L43
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 29


 934 0006 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 935              	.LVL41:
 468:Src/main.c    ****   count++; 
 936              		.loc 1 468 3 view .LVU258
 937              		.loc 1 468 8 is_stmt 0 view .LVU259
 938 000a 054A     		ldr	r2, .L43+4
 939 000c 1368     		ldr	r3, [r2]
 940 000e 0133     		adds	r3, r3, #1
 941 0010 1360     		str	r3, [r2]
 469:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 470:Src/main.c    ****   HAL_TIM_IRQHandler(&htim3);
 942              		.loc 1 470 3 is_stmt 1 view .LVU260
 943 0012 0448     		ldr	r0, .L43+8
 944 0014 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 945              	.LVL42:
 471:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 472:Src/main.c    **** 
 473:Src/main.c    ****   /* USER CODE END TIM3_IRQn 1 */
 474:Src/main.c    **** }
 946              		.loc 1 474 1 is_stmt 0 view .LVU261
 947 0018 08BD     		pop	{r3, pc}
 948              	.L44:
 949 001a 00BF     		.align	2
 950              	.L43:
 951 001c 000C0140 		.word	1073810432
 952 0020 00000000 		.word	.LANCHOR3
 953 0024 00000000 		.word	htim3
 954              		.cfi_endproc
 955              	.LFE74:
 957              		.section	.text.Error_Handler,"ax",%progbits
 958              		.align	1
 959              		.global	Error_Handler
 960              		.syntax unified
 961              		.thumb
 962              		.thumb_func
 963              		.fpu softvfp
 965              	Error_Handler:
 966              	.LFB75:
 475:Src/main.c    **** 
 476:Src/main.c    **** /**
 477:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 478:Src/main.c    ****   * @retval None
 479:Src/main.c    ****   */
 480:Src/main.c    **** void Error_Handler(void)
 481:Src/main.c    **** {
 967              		.loc 1 481 1 is_stmt 1 view -0
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 0, uses_anonymous_args = 0
 971              		@ link register save eliminated.
 482:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 483:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 484:Src/main.c    **** 
 485:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 486:Src/main.c    **** }
 972              		.loc 1 486 1 view .LVU263
 973 0000 7047     		bx	lr
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 30


 974              		.cfi_endproc
 975              	.LFE75:
 977              		.global	direction
 978              		.global	delay2
 979              		.global	freq2
 980              		.global	count
 981              		.global	delay
 982              		.global	freq
 983              		.global	ADCValue
 984              		.comm	huart1,64,4
 985              		.comm	htim3,64,4
 986              		.comm	htim2,64,4
 987              		.comm	hadc1,48,4
 988              		.section	.bss.ADCValue,"aw",%nobits
 989              		.align	2
 990              		.set	.LANCHOR0,. + 0
 993              	ADCValue:
 994 0000 00000000 		.space	4
 995              		.section	.bss.count,"aw",%nobits
 996              		.align	2
 997              		.set	.LANCHOR3,. + 0
 1000              	count:
 1001 0000 00000000 		.space	4
 1002              		.section	.bss.delay,"aw",%nobits
 1003              		.align	2
 1004              		.set	.LANCHOR2,. + 0
 1007              	delay:
 1008 0000 00000000 		.space	4
 1009              		.section	.bss.delay2,"aw",%nobits
 1010              		.align	2
 1011              		.set	.LANCHOR6,. + 0
 1014              	delay2:
 1015 0000 00000000 		.space	4
 1016              		.section	.bss.freq,"aw",%nobits
 1017              		.align	2
 1018              		.set	.LANCHOR1,. + 0
 1021              	freq:
 1022 0000 00000000 		.space	4
 1023              		.section	.data.direction,"aw"
 1024              		.align	2
 1025              		.set	.LANCHOR4,. + 0
 1028              	direction:
 1029 0000 01000000 		.word	1
 1030              		.section	.data.freq2,"aw"
 1031              		.align	2
 1032              		.set	.LANCHOR5,. + 0
 1035              	freq2:
 1036 0000 64000000 		.word	100
 1037              		.text
 1038              	.Letext0:
 1039              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1040              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1041              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1042              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1043              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1044              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1045              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 31


 1046              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1047              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 1048              		.file 11 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1049              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1050              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1051              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1052              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1053              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1054              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_adc.h"
 1055              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1056              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1057              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1058              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1059              		.file 22 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1060              		.file 23 "<built-in>"
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\cciYFxRl.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\cciYFxRl.s:153    .text.MX_GPIO_Init:00000094 $d
C:\cygwin64\tmp\cciYFxRl.s:160    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:166    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\cciYFxRl.s:215    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\cciYFxRl.s:221    .text.MX_ADC1_Init:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:227    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\cygwin64\tmp\cciYFxRl.s:304    .text.MX_ADC1_Init:00000040 $d
                            *COM*:00000030 hadc1
C:\cygwin64\tmp\cciYFxRl.s:310    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:316    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\cciYFxRl.s:415    .text.MX_TIM2_Init:00000068 $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\cciYFxRl.s:420    .text.MX_TIM3_Init:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:426    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\cygwin64\tmp\cciYFxRl.s:525    .text.MX_TIM3_Init:00000064 $d
                            *COM*:00000040 htim3
C:\cygwin64\tmp\cciYFxRl.s:531    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:538    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\cciYFxRl.s:639    .text.main:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:646    .text.main:00000000 main
C:\cygwin64\tmp\cciYFxRl.s:856    .text.main:00000110 $d
C:\cygwin64\tmp\cciYFxRl.s:875    .text.TIM2_IRQHandler:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:882    .text.TIM2_IRQHandler:00000000 TIM2_IRQHandler
C:\cygwin64\tmp\cciYFxRl.s:907    .text.TIM2_IRQHandler:00000014 $d
C:\cygwin64\tmp\cciYFxRl.s:913    .text.TIM3_IRQHandler:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:920    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\cygwin64\tmp\cciYFxRl.s:951    .text.TIM3_IRQHandler:0000001c $d
C:\cygwin64\tmp\cciYFxRl.s:958    .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\cciYFxRl.s:965    .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\cciYFxRl.s:1028   .data.direction:00000000 direction
C:\cygwin64\tmp\cciYFxRl.s:1014   .bss.delay2:00000000 delay2
C:\cygwin64\tmp\cciYFxRl.s:1035   .data.freq2:00000000 freq2
C:\cygwin64\tmp\cciYFxRl.s:1000   .bss.count:00000000 count
C:\cygwin64\tmp\cciYFxRl.s:1007   .bss.delay:00000000 delay
C:\cygwin64\tmp\cciYFxRl.s:1021   .bss.freq:00000000 freq
C:\cygwin64\tmp\cciYFxRl.s:993    .bss.ADCValue:00000000 ADCValue
C:\cygwin64\tmp\cciYFxRl.s:989    .bss.ADCValue:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:996    .bss.count:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:1003   .bss.delay:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:1010   .bss.delay2:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:1017   .bss.freq:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:1024   .data.direction:00000000 $d
C:\cygwin64\tmp\cciYFxRl.s:1031   .data.freq2:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_OC_Init
HAL_TIM_ConfigClockSource
ARM GAS  C:\cygwin64\tmp\cciYFxRl.s 			page 33


HAL_TIMEx_MasterConfigSynchronization
HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Start_IT
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2iz
HAL_Init
HAL_ADC_GetValue
HAL_GPIO_TogglePin
HAL_UART_Transmit
HAL_ADC_Start
HAL_ADC_PollForConversion
HAL_TIM_IRQHandler
