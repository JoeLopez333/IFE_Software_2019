ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB72:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** 
   3:Src/main.c    **** /* USER CODE END Header */
   4:Src/main.c    **** 
   5:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
   6:Src/main.c    **** #include "main.h"
   7:Src/main.c    **** 
   8:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
   9:Src/main.c    **** /* USER CODE BEGIN Includes */
  10:Src/main.c    **** 
  11:Src/main.c    **** /* USER CODE END Includes */
  12:Src/main.c    **** 
  13:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  14:Src/main.c    **** /* USER CODE BEGIN PTD */
  15:Src/main.c    **** 
  16:Src/main.c    **** /* USER CODE END PTD */
  17:Src/main.c    **** 
  18:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  19:Src/main.c    **** /* USER CODE BEGIN PD */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* USER CODE END PD */
  22:Src/main.c    **** 
  23:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  24:Src/main.c    **** /* USER CODE BEGIN PM */
  25:Src/main.c    **** 
  26:Src/main.c    **** /* USER CODE END PM */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  29:Src/main.c    **** SPI_HandleTypeDef hspi1;
  30:Src/main.c    **** 
  31:Src/main.c    **** TIM_HandleTypeDef htim2;
  32:Src/main.c    **** TIM_HandleTypeDef htim3;
  33:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 2


  34:Src/main.c    **** UART_HandleTypeDef huart1;
  35:Src/main.c    **** 
  36:Src/main.c    **** /* USER CODE BEGIN PV */
  37:Src/main.c    **** long pin2p, pin3p, pin2t, pin3t;
  38:Src/main.c    **** int freq2, freq3;
  39:Src/main.c    **** int bias = 75;
  40:Src/main.c    **** int val = 0;
  41:Src/main.c    **** long direction = 1;
  42:Src/main.c    **** int slip = 0;
  43:Src/main.c    **** float integral = 0;
  44:Src/main.c    **** /* USER CODE END PV */
  45:Src/main.c    **** 
  46:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  47:Src/main.c    **** void SystemClock_Config(void);
  48:Src/main.c    **** static void MX_GPIO_Init(void);
  49:Src/main.c    **** static void MX_USART1_UART_Init(void);
  50:Src/main.c    **** static void MX_SPI1_Init(void);
  51:Src/main.c    **** static void MX_TIM2_Init(void);
  52:Src/main.c    **** static void MX_TIM3_Init(void);
  53:Src/main.c    **** /* USER CODE BEGIN PFP */
  54:Src/main.c    **** 
  55:Src/main.c    **** /* USER CODE END PFP */
  56:Src/main.c    **** 
  57:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  58:Src/main.c    **** /* USER CODE BEGIN 0 */
  59:Src/main.c    **** 
  60:Src/main.c    **** /* USER CODE END 0 */
  61:Src/main.c    **** 
  62:Src/main.c    **** /**
  63:Src/main.c    ****   * @brief  The application entry point.
  64:Src/main.c    ****   * @retval int
  65:Src/main.c    ****   */
  66:Src/main.c    **** int main(void)
  67:Src/main.c    **** {
  68:Src/main.c    ****   /* USER CODE BEGIN 1 */
  69:Src/main.c    **** 
  70:Src/main.c    ****   /* USER CODE END 1 */
  71:Src/main.c    **** 
  72:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  73:Src/main.c    **** 
  74:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Src/main.c    ****   HAL_Init();
  76:Src/main.c    **** 
  77:Src/main.c    ****   /* USER CODE BEGIN Init */
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* USER CODE END Init */
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Configure the system clock */
  82:Src/main.c    ****   SystemClock_Config();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END SysInit */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Initialize all configured peripherals */
  89:Src/main.c    ****   MX_GPIO_Init();
  90:Src/main.c    ****   MX_USART1_UART_Init();
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 3


  91:Src/main.c    ****   MX_SPI1_Init();
  92:Src/main.c    ****   MX_TIM2_Init();
  93:Src/main.c    ****   MX_TIM3_Init();
  94:Src/main.c    ****   /* USER CODE BEGIN 2 */
  95:Src/main.c    ****   
  96:Src/main.c    ****   /* USER CODE END 2 */
  97:Src/main.c    ****   
  98:Src/main.c    ****   /* Infinite loop */
  99:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 100:Src/main.c    ****   while (1)
 101:Src/main.c    ****   {
 102:Src/main.c    ****     /* USER CODE END WHILE */
 103:Src/main.c    **** 	slip = freq3 - freq2;
 104:Src/main.c    **** 	integral += .01 * slip;
 105:Src/main.c    ****   
 106:Src/main.c    **** 	val = bias + 1.25 * slip + 0.1 * integral; // + integral
 107:Src/main.c    **** 	
 108:Src/main.c    **** 	if (val > 255) val = 255;
 109:Src/main.c    **** 	if (val < 0) val = 0;
 110:Src/main.c    **** 	
 111:Src/main.c    **** 	unsigned char data3[4];
 112:Src/main.c    **** 	data3[0] = (freq2>>0) & 0xFF;
 113:Src/main.c    **** 	data3[1] = 0xFF;
 114:Src/main.c    **** 	data3[2] = (freq3) & 0xFF;
 115:Src/main.c    **** 	data3[3] = 0;
 116:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data3, sizeof(data3), 1000);
 117:Src/main.c    **** 	
 118:Src/main.c    **** 	unsigned char spi_data[2];
 119:Src/main.c    **** 	spi_data[0] = 0;
 120:Src/main.c    **** 	spi_data[1] = val; //val
 121:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);
 122:Src/main.c    **** 	
 123:Src/main.c    **** 	//HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 124:Src/main.c    **** 	HAL_Delay(10);
 125:Src/main.c    ****   
 126:Src/main.c    **** 	/*unsigned char spi_data[2];
 127:Src/main.c    **** 	spi_data[0] = 0;
 128:Src/main.c    **** 	spi_data[1] = 255;
 129:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);*/
 130:Src/main.c    ****     /* USER CODE BEGIN 3 */
 131:Src/main.c    ****   }
 132:Src/main.c    ****   /* USER CODE END 3 */
 133:Src/main.c    **** }
 134:Src/main.c    **** 
 135:Src/main.c    **** /**
 136:Src/main.c    ****   * @brief System Clock Configuration
 137:Src/main.c    ****   * @retval None
 138:Src/main.c    ****   */
 139:Src/main.c    **** void SystemClock_Config(void)
 140:Src/main.c    **** {
 141:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 142:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 143:Src/main.c    **** 
 144:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 145:Src/main.c    ****   */
 146:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 147:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 4


 148:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 149:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 150:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 151:Src/main.c    ****   {
 152:Src/main.c    ****     Error_Handler();
 153:Src/main.c    ****   }
 154:Src/main.c    ****   /**Initializes the CPU, AHB and APB busses clocks 
 155:Src/main.c    ****   */
 156:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 157:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 158:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 159:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 160:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 161:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 162:Src/main.c    **** 
 163:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 164:Src/main.c    ****   {
 165:Src/main.c    ****     Error_Handler();
 166:Src/main.c    ****   }
 167:Src/main.c    **** }
 168:Src/main.c    **** 
 169:Src/main.c    **** /**
 170:Src/main.c    ****   * @brief SPI1 Initialization Function
 171:Src/main.c    ****   * @param None
 172:Src/main.c    ****   * @retval None
 173:Src/main.c    ****   */
 174:Src/main.c    **** static void MX_SPI1_Init(void)
 175:Src/main.c    **** {
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 0 */
 178:Src/main.c    **** 
 179:Src/main.c    ****   /* USER CODE END SPI1_Init 0 */
 180:Src/main.c    **** 
 181:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 1 */
 182:Src/main.c    **** 
 183:Src/main.c    ****   /* USER CODE END SPI1_Init 1 */
 184:Src/main.c    ****   /* SPI1 parameter configuration*/
 185:Src/main.c    ****   hspi1.Instance = SPI1;
 186:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 187:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 188:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 189:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 190:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 191:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 192:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 193:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 194:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 195:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 196:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 197:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 198:Src/main.c    ****   {
 199:Src/main.c    ****     Error_Handler();
 200:Src/main.c    ****   }
 201:Src/main.c    ****   /* USER CODE BEGIN SPI1_Init 2 */
 202:Src/main.c    **** 
 203:Src/main.c    ****   /* USER CODE END SPI1_Init 2 */
 204:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 5


 205:Src/main.c    **** }
 206:Src/main.c    **** 
 207:Src/main.c    **** /**
 208:Src/main.c    ****   * @brief TIM2 Initialization Function
 209:Src/main.c    ****   * @param None
 210:Src/main.c    ****   * @retval None
 211:Src/main.c    ****   */
 212:Src/main.c    **** static void MX_TIM2_Init(void)
 213:Src/main.c    **** {
 214:Src/main.c    **** 
 215:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 0 */
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE END TIM2_Init 0 */
 218:Src/main.c    **** 
 219:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 220:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 221:Src/main.c    **** 
 222:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 1 */
 223:Src/main.c    **** 
 224:Src/main.c    ****   /* USER CODE END TIM2_Init 1 */
 225:Src/main.c    ****   htim2.Instance = TIM2;
 226:Src/main.c    ****   htim2.Init.Prescaler = 200;
 227:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 228:Src/main.c    ****   htim2.Init.Period = 40000;
 229:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 230:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 231:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 232:Src/main.c    ****   {
 233:Src/main.c    ****     Error_Handler();
 234:Src/main.c    ****   }
 235:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 236:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 237:Src/main.c    ****   {
 238:Src/main.c    ****     Error_Handler();
 239:Src/main.c    ****   }
 240:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim2) != HAL_OK)
 241:Src/main.c    ****   {
 242:Src/main.c    ****     Error_Handler();
 243:Src/main.c    ****   }
 244:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 245:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 246:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 247:Src/main.c    ****   {
 248:Src/main.c    ****     Error_Handler();
 249:Src/main.c    ****   }
 250:Src/main.c    ****   /* USER CODE BEGIN TIM2_Init 2 */
 251:Src/main.c    ****   HAL_TIM_Base_Start(&htim2);
 252:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 253:Src/main.c    **** 
 254:Src/main.c    **** }
 255:Src/main.c    **** 
 256:Src/main.c    **** /**
 257:Src/main.c    ****   * @brief TIM3 Initialization Function
 258:Src/main.c    ****   * @param None
 259:Src/main.c    ****   * @retval None
 260:Src/main.c    ****   */
 261:Src/main.c    **** static void MX_TIM3_Init(void)
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 6


 262:Src/main.c    **** {
 263:Src/main.c    **** 
 264:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 265:Src/main.c    **** 
 266:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 267:Src/main.c    **** 
 268:Src/main.c    ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 269:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 270:Src/main.c    **** 
 271:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 272:Src/main.c    **** 
 273:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 274:Src/main.c    ****   htim3.Instance = TIM3;
 275:Src/main.c    ****   htim3.Init.Prescaler = 1; 
 276:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 277:Src/main.c    ****   htim3.Init.Period = 40000;
 278:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 279:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 280:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 281:Src/main.c    ****   {
 282:Src/main.c    ****     Error_Handler();
 283:Src/main.c    ****   }
 284:Src/main.c    ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 285:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 286:Src/main.c    ****   {
 287:Src/main.c    ****     Error_Handler();
 288:Src/main.c    ****   }
 289:Src/main.c    ****   if (HAL_TIM_OC_Init(&htim3) != HAL_OK)
 290:Src/main.c    ****   {
 291:Src/main.c    ****     Error_Handler();
 292:Src/main.c    ****   }
 293:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 294:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 295:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 296:Src/main.c    ****   {
 297:Src/main.c    ****     Error_Handler();
 298:Src/main.c    ****   }
 299:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 300:Src/main.c    ****   HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 301:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 302:Src/main.c    ****   //HAL_TIM_Base_Start_IT(&htim3);
 303:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 304:Src/main.c    **** 
 305:Src/main.c    **** }
 306:Src/main.c    **** 
 307:Src/main.c    **** /**
 308:Src/main.c    ****   * @brief USART1 Initialization Function
 309:Src/main.c    ****   * @param None
 310:Src/main.c    ****   * @retval None
 311:Src/main.c    ****   */
 312:Src/main.c    **** static void MX_USART1_UART_Init(void)
 313:Src/main.c    **** {
 314:Src/main.c    **** 
 315:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 316:Src/main.c    **** 
 317:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 318:Src/main.c    **** 
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 7


 319:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 320:Src/main.c    **** 
 321:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 322:Src/main.c    ****   huart1.Instance = USART1;
 323:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 324:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 325:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 326:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 327:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 328:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 329:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 330:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 331:Src/main.c    ****   {
 332:Src/main.c    ****     Error_Handler();
 333:Src/main.c    ****   }
 334:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 335:Src/main.c    **** 
 336:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 337:Src/main.c    **** 
 338:Src/main.c    **** }
 339:Src/main.c    **** 
 340:Src/main.c    **** /**
 341:Src/main.c    ****   * @brief GPIO Initialization Function
 342:Src/main.c    ****   * @param None
 343:Src/main.c    ****   * @retval None
 344:Src/main.c    ****   */
 345:Src/main.c    **** static void MX_GPIO_Init(void)
 346:Src/main.c    **** {
  26              		.loc 1 346 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 30B5     		push	{r4, r5, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
  35              		.cfi_offset 14, -4
  36 0002 87B0     		sub	sp, sp, #28
  37              	.LCFI1:
  38              		.cfi_def_cfa_offset 40
 347:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  39              		.loc 1 347 3 view .LVU1
  40              		.loc 1 347 20 is_stmt 0 view .LVU2
  41 0004 0024     		movs	r4, #0
  42 0006 0294     		str	r4, [sp, #8]
  43 0008 0394     		str	r4, [sp, #12]
  44 000a 0494     		str	r4, [sp, #16]
  45 000c 0594     		str	r4, [sp, #20]
 348:Src/main.c    **** 
 349:Src/main.c    ****   /* GPIO Ports Clock Enable */
 350:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  46              		.loc 1 350 3 is_stmt 1 view .LVU3
  47              	.LBB2:
  48              		.loc 1 350 3 view .LVU4
  49              		.loc 1 350 3 view .LVU5
  50 000e 204B     		ldr	r3, .L3
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 8


  51 0010 9A69     		ldr	r2, [r3, #24]
  52 0012 42F01002 		orr	r2, r2, #16
  53 0016 9A61     		str	r2, [r3, #24]
  54              		.loc 1 350 3 view .LVU6
  55 0018 9A69     		ldr	r2, [r3, #24]
  56 001a 02F01002 		and	r2, r2, #16
  57 001e 0092     		str	r2, [sp]
  58              		.loc 1 350 3 view .LVU7
  59 0020 009A     		ldr	r2, [sp]
  60              	.LBE2:
 351:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  61              		.loc 1 351 3 view .LVU8
  62              	.LBB3:
  63              		.loc 1 351 3 view .LVU9
  64              		.loc 1 351 3 view .LVU10
  65 0022 9A69     		ldr	r2, [r3, #24]
  66 0024 42F00402 		orr	r2, r2, #4
  67 0028 9A61     		str	r2, [r3, #24]
  68              		.loc 1 351 3 view .LVU11
  69 002a 9B69     		ldr	r3, [r3, #24]
  70 002c 03F00403 		and	r3, r3, #4
  71 0030 0193     		str	r3, [sp, #4]
  72              		.loc 1 351 3 view .LVU12
  73 0032 019B     		ldr	r3, [sp, #4]
  74              	.LBE3:
 352:Src/main.c    **** 
 353:Src/main.c    ****   /*Configure GPIO pin Output Level */
 354:Src/main.c    ****   HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, GPIO_PIN_RESET);
  75              		.loc 1 354 3 view .LVU13
  76 0034 174D     		ldr	r5, .L3+4
  77 0036 2246     		mov	r2, r4
  78 0038 4FF40051 		mov	r1, #8192
  79 003c 2846     		mov	r0, r5
  80 003e FFF7FEFF 		bl	HAL_GPIO_WritePin
  81              	.LVL0:
 355:Src/main.c    **** 
 356:Src/main.c    ****   /*Configure GPIO pins : PA2 PA3 */
 357:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
  82              		.loc 1 357 3 view .LVU14
  83              		.loc 1 357 23 is_stmt 0 view .LVU15
  84 0042 0C23     		movs	r3, #12
  85 0044 0293     		str	r3, [sp, #8]
 358:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
  86              		.loc 1 358 3 is_stmt 1 view .LVU16
  87              		.loc 1 358 24 is_stmt 0 view .LVU17
  88 0046 144B     		ldr	r3, .L3+8
  89 0048 0393     		str	r3, [sp, #12]
 359:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  90              		.loc 1 359 3 is_stmt 1 view .LVU18
  91              		.loc 1 359 24 is_stmt 0 view .LVU19
  92 004a 0494     		str	r4, [sp, #16]
 360:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  93              		.loc 1 360 3 is_stmt 1 view .LVU20
  94 004c 02A9     		add	r1, sp, #8
  95 004e 1348     		ldr	r0, .L3+12
  96 0050 FFF7FEFF 		bl	HAL_GPIO_Init
  97              	.LVL1:
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 9


 361:Src/main.c    **** 
 362:Src/main.c    ****   /*Configure GPIO pin : PC13 */
 363:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
  98              		.loc 1 363 3 view .LVU21
  99              		.loc 1 363 23 is_stmt 0 view .LVU22
 100 0054 4FF40053 		mov	r3, #8192
 101 0058 0293     		str	r3, [sp, #8]
 364:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 102              		.loc 1 364 3 is_stmt 1 view .LVU23
 103              		.loc 1 364 24 is_stmt 0 view .LVU24
 104 005a 0123     		movs	r3, #1
 105 005c 0393     		str	r3, [sp, #12]
 365:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 106              		.loc 1 365 3 is_stmt 1 view .LVU25
 107              		.loc 1 365 24 is_stmt 0 view .LVU26
 108 005e 0494     		str	r4, [sp, #16]
 366:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 109              		.loc 1 366 3 is_stmt 1 view .LVU27
 110              		.loc 1 366 25 is_stmt 0 view .LVU28
 111 0060 0223     		movs	r3, #2
 112 0062 0593     		str	r3, [sp, #20]
 367:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 113              		.loc 1 367 3 is_stmt 1 view .LVU29
 114 0064 02A9     		add	r1, sp, #8
 115 0066 2846     		mov	r0, r5
 116 0068 FFF7FEFF 		bl	HAL_GPIO_Init
 117              	.LVL2:
 368:Src/main.c    **** 
 369:Src/main.c    ****   /* EXTI interrupt init*/
 370:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI2_IRQn, 0, 0);
 118              		.loc 1 370 3 view .LVU30
 119 006c 2246     		mov	r2, r4
 120 006e 2146     		mov	r1, r4
 121 0070 0820     		movs	r0, #8
 122 0072 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 123              	.LVL3:
 371:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI2_IRQn);
 124              		.loc 1 371 3 view .LVU31
 125 0076 0820     		movs	r0, #8
 126 0078 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 127              	.LVL4:
 372:Src/main.c    **** 
 373:Src/main.c    ****   HAL_NVIC_SetPriority(EXTI3_IRQn, 0, 0);
 128              		.loc 1 373 3 view .LVU32
 129 007c 2246     		mov	r2, r4
 130 007e 2146     		mov	r1, r4
 131 0080 0920     		movs	r0, #9
 132 0082 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 133              	.LVL5:
 374:Src/main.c    ****   HAL_NVIC_EnableIRQ(EXTI3_IRQn);
 134              		.loc 1 374 3 view .LVU33
 135 0086 0920     		movs	r0, #9
 136 0088 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 137              	.LVL6:
 375:Src/main.c    **** 
 376:Src/main.c    **** }
 138              		.loc 1 376 1 is_stmt 0 view .LVU34
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 10


 139 008c 07B0     		add	sp, sp, #28
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 12
 142              		@ sp needed
 143 008e 30BD     		pop	{r4, r5, pc}
 144              	.L4:
 145              		.align	2
 146              	.L3:
 147 0090 00100240 		.word	1073876992
 148 0094 00100140 		.word	1073811456
 149 0098 00001110 		.word	269549568
 150 009c 00080140 		.word	1073809408
 151              		.cfi_endproc
 152              	.LFE72:
 154              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 155              		.align	1
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 159              		.fpu softvfp
 161              	MX_USART1_UART_Init:
 162              	.LFB71:
 313:Src/main.c    **** 
 163              		.loc 1 313 1 is_stmt 1 view -0
 164              		.cfi_startproc
 165              		@ args = 0, pretend = 0, frame = 0
 166              		@ frame_needed = 0, uses_anonymous_args = 0
 167 0000 08B5     		push	{r3, lr}
 168              	.LCFI3:
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 3, -8
 171              		.cfi_offset 14, -4
 322:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 172              		.loc 1 322 3 view .LVU36
 322:Src/main.c    ****   huart1.Init.BaudRate = 115200;
 173              		.loc 1 322 19 is_stmt 0 view .LVU37
 174 0002 0848     		ldr	r0, .L7
 175 0004 084B     		ldr	r3, .L7+4
 176 0006 0360     		str	r3, [r0]
 323:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 177              		.loc 1 323 3 is_stmt 1 view .LVU38
 323:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 178              		.loc 1 323 24 is_stmt 0 view .LVU39
 179 0008 4FF4E133 		mov	r3, #115200
 180 000c 4360     		str	r3, [r0, #4]
 324:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 181              		.loc 1 324 3 is_stmt 1 view .LVU40
 324:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 182              		.loc 1 324 26 is_stmt 0 view .LVU41
 183 000e 0023     		movs	r3, #0
 184 0010 8360     		str	r3, [r0, #8]
 325:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 185              		.loc 1 325 3 is_stmt 1 view .LVU42
 325:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 186              		.loc 1 325 24 is_stmt 0 view .LVU43
 187 0012 C360     		str	r3, [r0, #12]
 326:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 11


 188              		.loc 1 326 3 is_stmt 1 view .LVU44
 326:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 189              		.loc 1 326 22 is_stmt 0 view .LVU45
 190 0014 0361     		str	r3, [r0, #16]
 327:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 191              		.loc 1 327 3 is_stmt 1 view .LVU46
 327:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 192              		.loc 1 327 20 is_stmt 0 view .LVU47
 193 0016 0C22     		movs	r2, #12
 194 0018 4261     		str	r2, [r0, #20]
 328:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 195              		.loc 1 328 3 is_stmt 1 view .LVU48
 328:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 196              		.loc 1 328 25 is_stmt 0 view .LVU49
 197 001a 8361     		str	r3, [r0, #24]
 329:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 198              		.loc 1 329 3 is_stmt 1 view .LVU50
 329:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 199              		.loc 1 329 28 is_stmt 0 view .LVU51
 200 001c C361     		str	r3, [r0, #28]
 330:Src/main.c    ****   {
 201              		.loc 1 330 3 is_stmt 1 view .LVU52
 330:Src/main.c    ****   {
 202              		.loc 1 330 7 is_stmt 0 view .LVU53
 203 001e FFF7FEFF 		bl	HAL_UART_Init
 204              	.LVL7:
 338:Src/main.c    **** 
 205              		.loc 1 338 1 view .LVU54
 206 0022 08BD     		pop	{r3, pc}
 207              	.L8:
 208              		.align	2
 209              	.L7:
 210 0024 00000000 		.word	huart1
 211 0028 00380140 		.word	1073821696
 212              		.cfi_endproc
 213              	.LFE71:
 215              		.section	.text.MX_SPI1_Init,"ax",%progbits
 216              		.align	1
 217              		.syntax unified
 218              		.thumb
 219              		.thumb_func
 220              		.fpu softvfp
 222              	MX_SPI1_Init:
 223              	.LFB68:
 175:Src/main.c    **** 
 224              		.loc 1 175 1 is_stmt 1 view -0
 225              		.cfi_startproc
 226              		@ args = 0, pretend = 0, frame = 0
 227              		@ frame_needed = 0, uses_anonymous_args = 0
 228 0000 08B5     		push	{r3, lr}
 229              	.LCFI4:
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 185:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 233              		.loc 1 185 3 view .LVU56
 185:Src/main.c    ****   hspi1.Init.Mode = SPI_MODE_MASTER;
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 12


 234              		.loc 1 185 18 is_stmt 0 view .LVU57
 235 0002 0B48     		ldr	r0, .L11
 236 0004 0B4B     		ldr	r3, .L11+4
 237 0006 0360     		str	r3, [r0]
 186:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 238              		.loc 1 186 3 is_stmt 1 view .LVU58
 186:Src/main.c    ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 239              		.loc 1 186 19 is_stmt 0 view .LVU59
 240 0008 4FF48273 		mov	r3, #260
 241 000c 4360     		str	r3, [r0, #4]
 187:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 242              		.loc 1 187 3 is_stmt 1 view .LVU60
 187:Src/main.c    ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 243              		.loc 1 187 24 is_stmt 0 view .LVU61
 244 000e 0023     		movs	r3, #0
 245 0010 8360     		str	r3, [r0, #8]
 188:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 246              		.loc 1 188 3 is_stmt 1 view .LVU62
 188:Src/main.c    ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 247              		.loc 1 188 23 is_stmt 0 view .LVU63
 248 0012 C360     		str	r3, [r0, #12]
 189:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 249              		.loc 1 189 3 is_stmt 1 view .LVU64
 189:Src/main.c    ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 250              		.loc 1 189 26 is_stmt 0 view .LVU65
 251 0014 0361     		str	r3, [r0, #16]
 190:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 252              		.loc 1 190 3 is_stmt 1 view .LVU66
 190:Src/main.c    ****   hspi1.Init.NSS = SPI_NSS_HARD_OUTPUT;
 253              		.loc 1 190 23 is_stmt 0 view .LVU67
 254 0016 4361     		str	r3, [r0, #20]
 191:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 255              		.loc 1 191 3 is_stmt 1 view .LVU68
 191:Src/main.c    ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 256              		.loc 1 191 18 is_stmt 0 view .LVU69
 257 0018 4FF48022 		mov	r2, #262144
 258 001c 8261     		str	r2, [r0, #24]
 192:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 259              		.loc 1 192 3 is_stmt 1 view .LVU70
 192:Src/main.c    ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 260              		.loc 1 192 32 is_stmt 0 view .LVU71
 261 001e C361     		str	r3, [r0, #28]
 193:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 262              		.loc 1 193 3 is_stmt 1 view .LVU72
 193:Src/main.c    ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 263              		.loc 1 193 23 is_stmt 0 view .LVU73
 264 0020 0362     		str	r3, [r0, #32]
 194:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 265              		.loc 1 194 3 is_stmt 1 view .LVU74
 194:Src/main.c    ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 266              		.loc 1 194 21 is_stmt 0 view .LVU75
 267 0022 4362     		str	r3, [r0, #36]
 195:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 268              		.loc 1 195 3 is_stmt 1 view .LVU76
 195:Src/main.c    ****   hspi1.Init.CRCPolynomial = 10;
 269              		.loc 1 195 29 is_stmt 0 view .LVU77
 270 0024 8362     		str	r3, [r0, #40]
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 13


 196:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 271              		.loc 1 196 3 is_stmt 1 view .LVU78
 196:Src/main.c    ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 272              		.loc 1 196 28 is_stmt 0 view .LVU79
 273 0026 0A23     		movs	r3, #10
 274 0028 C362     		str	r3, [r0, #44]
 197:Src/main.c    ****   {
 275              		.loc 1 197 3 is_stmt 1 view .LVU80
 197:Src/main.c    ****   {
 276              		.loc 1 197 7 is_stmt 0 view .LVU81
 277 002a FFF7FEFF 		bl	HAL_SPI_Init
 278              	.LVL8:
 205:Src/main.c    **** 
 279              		.loc 1 205 1 view .LVU82
 280 002e 08BD     		pop	{r3, pc}
 281              	.L12:
 282              		.align	2
 283              	.L11:
 284 0030 00000000 		.word	hspi1
 285 0034 00300140 		.word	1073819648
 286              		.cfi_endproc
 287              	.LFE68:
 289              		.section	.text.MX_TIM3_Init,"ax",%progbits
 290              		.align	1
 291              		.syntax unified
 292              		.thumb
 293              		.thumb_func
 294              		.fpu softvfp
 296              	MX_TIM3_Init:
 297              	.LFB70:
 262:Src/main.c    **** 
 298              		.loc 1 262 1 is_stmt 1 view -0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 24
 301              		@ frame_needed = 0, uses_anonymous_args = 0
 302 0000 30B5     		push	{r4, r5, lr}
 303              	.LCFI5:
 304              		.cfi_def_cfa_offset 12
 305              		.cfi_offset 4, -12
 306              		.cfi_offset 5, -8
 307              		.cfi_offset 14, -4
 308 0002 87B0     		sub	sp, sp, #28
 309              	.LCFI6:
 310              		.cfi_def_cfa_offset 40
 268:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 311              		.loc 1 268 3 view .LVU84
 268:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 312              		.loc 1 268 26 is_stmt 0 view .LVU85
 313 0004 0024     		movs	r4, #0
 314 0006 0294     		str	r4, [sp, #8]
 315 0008 0394     		str	r4, [sp, #12]
 316 000a 0494     		str	r4, [sp, #16]
 317 000c 0594     		str	r4, [sp, #20]
 269:Src/main.c    **** 
 318              		.loc 1 269 3 is_stmt 1 view .LVU86
 269:Src/main.c    **** 
 319              		.loc 1 269 27 is_stmt 0 view .LVU87
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 14


 320 000e 0094     		str	r4, [sp]
 321 0010 0194     		str	r4, [sp, #4]
 274:Src/main.c    ****   htim3.Init.Prescaler = 1; 
 322              		.loc 1 274 3 is_stmt 1 view .LVU88
 274:Src/main.c    ****   htim3.Init.Prescaler = 1; 
 323              		.loc 1 274 18 is_stmt 0 view .LVU89
 324 0012 144D     		ldr	r5, .L15
 325 0014 144B     		ldr	r3, .L15+4
 326 0016 2B60     		str	r3, [r5]
 275:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 327              		.loc 1 275 3 is_stmt 1 view .LVU90
 275:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 328              		.loc 1 275 24 is_stmt 0 view .LVU91
 329 0018 0123     		movs	r3, #1
 330 001a 6B60     		str	r3, [r5, #4]
 276:Src/main.c    ****   htim3.Init.Period = 40000;
 331              		.loc 1 276 3 is_stmt 1 view .LVU92
 276:Src/main.c    ****   htim3.Init.Period = 40000;
 332              		.loc 1 276 26 is_stmt 0 view .LVU93
 333 001c AC60     		str	r4, [r5, #8]
 277:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 334              		.loc 1 277 3 is_stmt 1 view .LVU94
 277:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 335              		.loc 1 277 21 is_stmt 0 view .LVU95
 336 001e 49F64043 		movw	r3, #40000
 337 0022 EB60     		str	r3, [r5, #12]
 278:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 338              		.loc 1 278 3 is_stmt 1 view .LVU96
 278:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 339              		.loc 1 278 28 is_stmt 0 view .LVU97
 340 0024 2C61     		str	r4, [r5, #16]
 279:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 341              		.loc 1 279 3 is_stmt 1 view .LVU98
 279:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 342              		.loc 1 279 32 is_stmt 0 view .LVU99
 343 0026 AC61     		str	r4, [r5, #24]
 280:Src/main.c    ****   {
 344              		.loc 1 280 3 is_stmt 1 view .LVU100
 280:Src/main.c    ****   {
 345              		.loc 1 280 7 is_stmt 0 view .LVU101
 346 0028 2846     		mov	r0, r5
 347 002a FFF7FEFF 		bl	HAL_TIM_Base_Init
 348              	.LVL9:
 284:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 349              		.loc 1 284 3 is_stmt 1 view .LVU102
 284:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 350              		.loc 1 284 34 is_stmt 0 view .LVU103
 351 002e 4FF48053 		mov	r3, #4096
 352 0032 0293     		str	r3, [sp, #8]
 285:Src/main.c    ****   {
 353              		.loc 1 285 3 is_stmt 1 view .LVU104
 285:Src/main.c    ****   {
 354              		.loc 1 285 7 is_stmt 0 view .LVU105
 355 0034 02A9     		add	r1, sp, #8
 356 0036 2846     		mov	r0, r5
 357 0038 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 358              	.LVL10:
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 15


 289:Src/main.c    ****   {
 359              		.loc 1 289 3 is_stmt 1 view .LVU106
 289:Src/main.c    ****   {
 360              		.loc 1 289 7 is_stmt 0 view .LVU107
 361 003c 2846     		mov	r0, r5
 362 003e FFF7FEFF 		bl	HAL_TIM_OC_Init
 363              	.LVL11:
 293:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 364              		.loc 1 293 3 is_stmt 1 view .LVU108
 293:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 365              		.loc 1 293 37 is_stmt 0 view .LVU109
 366 0042 0094     		str	r4, [sp]
 294:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 367              		.loc 1 294 3 is_stmt 1 view .LVU110
 294:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 368              		.loc 1 294 33 is_stmt 0 view .LVU111
 369 0044 0194     		str	r4, [sp, #4]
 295:Src/main.c    ****   {
 370              		.loc 1 295 3 is_stmt 1 view .LVU112
 295:Src/main.c    ****   {
 371              		.loc 1 295 7 is_stmt 0 view .LVU113
 372 0046 6946     		mov	r1, sp
 373 0048 2846     		mov	r0, r5
 374 004a FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 375              	.LVL12:
 300:Src/main.c    ****   HAL_NVIC_EnableIRQ(TIM3_IRQn);
 376              		.loc 1 300 3 is_stmt 1 view .LVU114
 377 004e 2246     		mov	r2, r4
 378 0050 2146     		mov	r1, r4
 379 0052 1D20     		movs	r0, #29
 380 0054 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 381              	.LVL13:
 301:Src/main.c    ****   //HAL_TIM_Base_Start_IT(&htim3);
 382              		.loc 1 301 3 view .LVU115
 383 0058 1D20     		movs	r0, #29
 384 005a FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 385              	.LVL14:
 305:Src/main.c    **** 
 386              		.loc 1 305 1 is_stmt 0 view .LVU116
 387 005e 07B0     		add	sp, sp, #28
 388              	.LCFI7:
 389              		.cfi_def_cfa_offset 12
 390              		@ sp needed
 391 0060 30BD     		pop	{r4, r5, pc}
 392              	.L16:
 393 0062 00BF     		.align	2
 394              	.L15:
 395 0064 00000000 		.word	htim3
 396 0068 00040040 		.word	1073742848
 397              		.cfi_endproc
 398              	.LFE70:
 400              		.section	.text.MX_TIM2_Init,"ax",%progbits
 401              		.align	1
 402              		.syntax unified
 403              		.thumb
 404              		.thumb_func
 405              		.fpu softvfp
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 16


 407              	MX_TIM2_Init:
 408              	.LFB69:
 213:Src/main.c    **** 
 409              		.loc 1 213 1 is_stmt 1 view -0
 410              		.cfi_startproc
 411              		@ args = 0, pretend = 0, frame = 24
 412              		@ frame_needed = 0, uses_anonymous_args = 0
 413 0000 30B5     		push	{r4, r5, lr}
 414              	.LCFI8:
 415              		.cfi_def_cfa_offset 12
 416              		.cfi_offset 4, -12
 417              		.cfi_offset 5, -8
 418              		.cfi_offset 14, -4
 419 0002 87B0     		sub	sp, sp, #28
 420              	.LCFI9:
 421              		.cfi_def_cfa_offset 40
 219:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 422              		.loc 1 219 3 view .LVU118
 219:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 423              		.loc 1 219 26 is_stmt 0 view .LVU119
 424 0004 0025     		movs	r5, #0
 425 0006 0295     		str	r5, [sp, #8]
 426 0008 0395     		str	r5, [sp, #12]
 427 000a 0495     		str	r5, [sp, #16]
 428 000c 0595     		str	r5, [sp, #20]
 220:Src/main.c    **** 
 429              		.loc 1 220 3 is_stmt 1 view .LVU120
 220:Src/main.c    **** 
 430              		.loc 1 220 27 is_stmt 0 view .LVU121
 431 000e 0095     		str	r5, [sp]
 432 0010 0195     		str	r5, [sp, #4]
 225:Src/main.c    ****   htim2.Init.Prescaler = 200;
 433              		.loc 1 225 3 is_stmt 1 view .LVU122
 225:Src/main.c    ****   htim2.Init.Prescaler = 200;
 434              		.loc 1 225 18 is_stmt 0 view .LVU123
 435 0012 124C     		ldr	r4, .L19
 436 0014 4FF08043 		mov	r3, #1073741824
 437 0018 2360     		str	r3, [r4]
 226:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 438              		.loc 1 226 3 is_stmt 1 view .LVU124
 226:Src/main.c    ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 439              		.loc 1 226 24 is_stmt 0 view .LVU125
 440 001a C823     		movs	r3, #200
 441 001c 6360     		str	r3, [r4, #4]
 227:Src/main.c    ****   htim2.Init.Period = 40000;
 442              		.loc 1 227 3 is_stmt 1 view .LVU126
 227:Src/main.c    ****   htim2.Init.Period = 40000;
 443              		.loc 1 227 26 is_stmt 0 view .LVU127
 444 001e A560     		str	r5, [r4, #8]
 228:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 445              		.loc 1 228 3 is_stmt 1 view .LVU128
 228:Src/main.c    ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 446              		.loc 1 228 21 is_stmt 0 view .LVU129
 447 0020 49F64043 		movw	r3, #40000
 448 0024 E360     		str	r3, [r4, #12]
 229:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 449              		.loc 1 229 3 is_stmt 1 view .LVU130
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 17


 229:Src/main.c    ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 450              		.loc 1 229 28 is_stmt 0 view .LVU131
 451 0026 2561     		str	r5, [r4, #16]
 230:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 452              		.loc 1 230 3 is_stmt 1 view .LVU132
 230:Src/main.c    ****   if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 453              		.loc 1 230 32 is_stmt 0 view .LVU133
 454 0028 A561     		str	r5, [r4, #24]
 231:Src/main.c    ****   {
 455              		.loc 1 231 3 is_stmt 1 view .LVU134
 231:Src/main.c    ****   {
 456              		.loc 1 231 7 is_stmt 0 view .LVU135
 457 002a 2046     		mov	r0, r4
 458 002c FFF7FEFF 		bl	HAL_TIM_Base_Init
 459              	.LVL15:
 235:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 460              		.loc 1 235 3 is_stmt 1 view .LVU136
 235:Src/main.c    ****   if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 461              		.loc 1 235 34 is_stmt 0 view .LVU137
 462 0030 4FF48053 		mov	r3, #4096
 463 0034 0293     		str	r3, [sp, #8]
 236:Src/main.c    ****   {
 464              		.loc 1 236 3 is_stmt 1 view .LVU138
 236:Src/main.c    ****   {
 465              		.loc 1 236 7 is_stmt 0 view .LVU139
 466 0036 02A9     		add	r1, sp, #8
 467 0038 2046     		mov	r0, r4
 468 003a FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 469              	.LVL16:
 240:Src/main.c    ****   {
 470              		.loc 1 240 3 is_stmt 1 view .LVU140
 240:Src/main.c    ****   {
 471              		.loc 1 240 7 is_stmt 0 view .LVU141
 472 003e 2046     		mov	r0, r4
 473 0040 FFF7FEFF 		bl	HAL_TIM_OC_Init
 474              	.LVL17:
 244:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 475              		.loc 1 244 3 is_stmt 1 view .LVU142
 244:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 476              		.loc 1 244 37 is_stmt 0 view .LVU143
 477 0044 0095     		str	r5, [sp]
 245:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 478              		.loc 1 245 3 is_stmt 1 view .LVU144
 245:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 479              		.loc 1 245 33 is_stmt 0 view .LVU145
 480 0046 0195     		str	r5, [sp, #4]
 246:Src/main.c    ****   {
 481              		.loc 1 246 3 is_stmt 1 view .LVU146
 246:Src/main.c    ****   {
 482              		.loc 1 246 7 is_stmt 0 view .LVU147
 483 0048 6946     		mov	r1, sp
 484 004a 2046     		mov	r0, r4
 485 004c FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 486              	.LVL18:
 251:Src/main.c    ****   /* USER CODE END TIM2_Init 2 */
 487              		.loc 1 251 3 is_stmt 1 view .LVU148
 488 0050 2046     		mov	r0, r4
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 18


 489 0052 FFF7FEFF 		bl	HAL_TIM_Base_Start
 490              	.LVL19:
 254:Src/main.c    **** 
 491              		.loc 1 254 1 is_stmt 0 view .LVU149
 492 0056 07B0     		add	sp, sp, #28
 493              	.LCFI10:
 494              		.cfi_def_cfa_offset 12
 495              		@ sp needed
 496 0058 30BD     		pop	{r4, r5, pc}
 497              	.L20:
 498 005a 00BF     		.align	2
 499              	.L19:
 500 005c 00000000 		.word	htim2
 501              		.cfi_endproc
 502              	.LFE69:
 504              		.section	.text.SystemClock_Config,"ax",%progbits
 505              		.align	1
 506              		.global	SystemClock_Config
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 510              		.fpu softvfp
 512              	SystemClock_Config:
 513              	.LFB67:
 140:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 514              		.loc 1 140 1 is_stmt 1 view -0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 64
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518 0000 10B5     		push	{r4, lr}
 519              	.LCFI11:
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 4, -8
 522              		.cfi_offset 14, -4
 523 0002 90B0     		sub	sp, sp, #64
 524              	.LCFI12:
 525              		.cfi_def_cfa_offset 72
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 526              		.loc 1 141 3 view .LVU151
 141:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 527              		.loc 1 141 22 is_stmt 0 view .LVU152
 528 0004 2422     		movs	r2, #36
 529 0006 0021     		movs	r1, #0
 530 0008 07A8     		add	r0, sp, #28
 531 000a FFF7FEFF 		bl	memset
 532              	.LVL20:
 142:Src/main.c    **** 
 533              		.loc 1 142 3 is_stmt 1 view .LVU153
 142:Src/main.c    **** 
 534              		.loc 1 142 22 is_stmt 0 view .LVU154
 535 000e 0024     		movs	r4, #0
 536 0010 0194     		str	r4, [sp, #4]
 537 0012 0294     		str	r4, [sp, #8]
 538 0014 0394     		str	r4, [sp, #12]
 539 0016 0494     		str	r4, [sp, #16]
 540 0018 0594     		str	r4, [sp, #20]
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 19


 541              		.loc 1 146 3 is_stmt 1 view .LVU155
 146:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 542              		.loc 1 146 36 is_stmt 0 view .LVU156
 543 001a 0223     		movs	r3, #2
 544 001c 0693     		str	r3, [sp, #24]
 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 545              		.loc 1 147 3 is_stmt 1 view .LVU157
 147:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 546              		.loc 1 147 30 is_stmt 0 view .LVU158
 547 001e 0123     		movs	r3, #1
 548 0020 0A93     		str	r3, [sp, #40]
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 549              		.loc 1 148 3 is_stmt 1 view .LVU159
 148:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 550              		.loc 1 148 41 is_stmt 0 view .LVU160
 551 0022 1023     		movs	r3, #16
 552 0024 0B93     		str	r3, [sp, #44]
 149:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 553              		.loc 1 149 3 is_stmt 1 view .LVU161
 150:Src/main.c    ****   {
 554              		.loc 1 150 3 view .LVU162
 150:Src/main.c    ****   {
 555              		.loc 1 150 7 is_stmt 0 view .LVU163
 556 0026 06A8     		add	r0, sp, #24
 557 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 558              	.LVL21:
 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 559              		.loc 1 156 3 is_stmt 1 view .LVU164
 156:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 560              		.loc 1 156 31 is_stmt 0 view .LVU165
 561 002c 0F23     		movs	r3, #15
 562 002e 0193     		str	r3, [sp, #4]
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 563              		.loc 1 158 3 is_stmt 1 view .LVU166
 158:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 564              		.loc 1 158 34 is_stmt 0 view .LVU167
 565 0030 0294     		str	r4, [sp, #8]
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 566              		.loc 1 159 3 is_stmt 1 view .LVU168
 159:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 567              		.loc 1 159 35 is_stmt 0 view .LVU169
 568 0032 0394     		str	r4, [sp, #12]
 160:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 569              		.loc 1 160 3 is_stmt 1 view .LVU170
 160:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 570              		.loc 1 160 36 is_stmt 0 view .LVU171
 571 0034 0494     		str	r4, [sp, #16]
 161:Src/main.c    **** 
 572              		.loc 1 161 3 is_stmt 1 view .LVU172
 161:Src/main.c    **** 
 573              		.loc 1 161 36 is_stmt 0 view .LVU173
 574 0036 0594     		str	r4, [sp, #20]
 163:Src/main.c    ****   {
 575              		.loc 1 163 3 is_stmt 1 view .LVU174
 163:Src/main.c    ****   {
 576              		.loc 1 163 7 is_stmt 0 view .LVU175
 577 0038 2146     		mov	r1, r4
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 20


 578 003a 01A8     		add	r0, sp, #4
 579 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 580              	.LVL22:
 167:Src/main.c    **** 
 581              		.loc 1 167 1 view .LVU176
 582 0040 10B0     		add	sp, sp, #64
 583              	.LCFI13:
 584              		.cfi_def_cfa_offset 8
 585              		@ sp needed
 586 0042 10BD     		pop	{r4, pc}
 587              		.cfi_endproc
 588              	.LFE67:
 590              		.global	__aeabi_i2d
 591              		.global	__aeabi_dmul
 592              		.global	__aeabi_f2d
 593              		.global	__aeabi_dadd
 594              		.global	__aeabi_d2f
 595              		.global	__aeabi_d2iz
 596              		.section	.text.main,"ax",%progbits
 597              		.align	1
 598              		.global	main
 599              		.syntax unified
 600              		.thumb
 601              		.thumb_func
 602              		.fpu softvfp
 604              	main:
 605              	.LFB66:
  67:Src/main.c    ****   /* USER CODE BEGIN 1 */
 606              		.loc 1 67 1 is_stmt 1 view -0
 607              		.cfi_startproc
 608              		@ Volatile: function does not return.
 609              		@ args = 0, pretend = 0, frame = 8
 610              		@ frame_needed = 0, uses_anonymous_args = 0
 611 0000 80B5     		push	{r7, lr}
 612              	.LCFI14:
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 82B0     		sub	sp, sp, #8
 617              	.LCFI15:
 618              		.cfi_def_cfa_offset 16
  75:Src/main.c    **** 
 619              		.loc 1 75 3 view .LVU178
 620 0004 FFF7FEFF 		bl	HAL_Init
 621              	.LVL23:
  82:Src/main.c    **** 
 622              		.loc 1 82 3 view .LVU179
 623 0008 FFF7FEFF 		bl	SystemClock_Config
 624              	.LVL24:
  89:Src/main.c    ****   MX_USART1_UART_Init();
 625              		.loc 1 89 3 view .LVU180
 626 000c FFF7FEFF 		bl	MX_GPIO_Init
 627              	.LVL25:
  90:Src/main.c    ****   MX_SPI1_Init();
 628              		.loc 1 90 3 view .LVU181
 629 0010 FFF7FEFF 		bl	MX_USART1_UART_Init
 630              	.LVL26:
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 21


  91:Src/main.c    ****   MX_TIM2_Init();
 631              		.loc 1 91 3 view .LVU182
 632 0014 FFF7FEFF 		bl	MX_SPI1_Init
 633              	.LVL27:
  92:Src/main.c    ****   MX_TIM3_Init();
 634              		.loc 1 92 3 view .LVU183
 635 0018 FFF7FEFF 		bl	MX_TIM2_Init
 636              	.LVL28:
  93:Src/main.c    ****   /* USER CODE BEGIN 2 */
 637              		.loc 1 93 3 view .LVU184
 638 001c FFF7FEFF 		bl	MX_TIM3_Init
 639              	.LVL29:
 640 0020 28E0     		b	.L26
 641              	.L24:
 642              	.LBB4:
 109:Src/main.c    **** 	
 643              		.loc 1 109 2 view .LVU185
 109:Src/main.c    **** 	
 644              		.loc 1 109 10 is_stmt 0 view .LVU186
 645 0022 3D4B     		ldr	r3, .L28+16
 646 0024 1B68     		ldr	r3, [r3]
 109:Src/main.c    **** 	
 647              		.loc 1 109 5 view .LVU187
 648 0026 002B     		cmp	r3, #0
 649 0028 02DA     		bge	.L25
 109:Src/main.c    **** 	
 650              		.loc 1 109 15 is_stmt 1 discriminator 1 view .LVU188
 109:Src/main.c    **** 	
 651              		.loc 1 109 19 is_stmt 0 discriminator 1 view .LVU189
 652 002a 3B4B     		ldr	r3, .L28+16
 653 002c 0022     		movs	r2, #0
 654 002e 1A60     		str	r2, [r3]
 655              	.L25:
 111:Src/main.c    **** 	data3[0] = (freq2>>0) & 0xFF;
 656              		.loc 1 111 2 is_stmt 1 view .LVU190
 112:Src/main.c    **** 	data3[1] = 0xFF;
 657              		.loc 1 112 2 view .LVU191
 112:Src/main.c    **** 	data3[1] = 0xFF;
 658              		.loc 1 112 11 is_stmt 0 view .LVU192
 659 0030 8DF80450 		strb	r5, [sp, #4]
 113:Src/main.c    **** 	data3[2] = (freq3) & 0xFF;
 660              		.loc 1 113 2 is_stmt 1 view .LVU193
 113:Src/main.c    **** 	data3[2] = (freq3) & 0xFF;
 661              		.loc 1 113 11 is_stmt 0 view .LVU194
 662 0034 FF23     		movs	r3, #255
 663 0036 8DF80530 		strb	r3, [sp, #5]
 114:Src/main.c    **** 	data3[3] = 0;
 664              		.loc 1 114 2 is_stmt 1 view .LVU195
 114:Src/main.c    **** 	data3[3] = 0;
 665              		.loc 1 114 11 is_stmt 0 view .LVU196
 666 003a 8DF80640 		strb	r4, [sp, #6]
 115:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data3, sizeof(data3), 1000);
 667              		.loc 1 115 2 is_stmt 1 view .LVU197
 115:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data3, sizeof(data3), 1000);
 668              		.loc 1 115 11 is_stmt 0 view .LVU198
 669 003e 0024     		movs	r4, #0
 670 0040 8DF80740 		strb	r4, [sp, #7]
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 22


 116:Src/main.c    **** 	
 671              		.loc 1 116 2 is_stmt 1 view .LVU199
 672 0044 4FF47A73 		mov	r3, #1000
 673 0048 0422     		movs	r2, #4
 674 004a 0DEB0201 		add	r1, sp, r2
 675 004e 3348     		ldr	r0, .L28+20
 676 0050 FFF7FEFF 		bl	HAL_UART_Transmit
 677              	.LVL30:
 118:Src/main.c    **** 	spi_data[0] = 0;
 678              		.loc 1 118 2 view .LVU200
 119:Src/main.c    **** 	spi_data[1] = val; //val
 679              		.loc 1 119 2 view .LVU201
 119:Src/main.c    **** 	spi_data[1] = val; //val
 680              		.loc 1 119 14 is_stmt 0 view .LVU202
 681 0054 8DF80040 		strb	r4, [sp]
 120:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);
 682              		.loc 1 120 2 is_stmt 1 view .LVU203
 120:Src/main.c    **** 	HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);
 683              		.loc 1 120 14 is_stmt 0 view .LVU204
 684 0058 2F4B     		ldr	r3, .L28+16
 685 005a 1B68     		ldr	r3, [r3]
 686 005c 8DF80130 		strb	r3, [sp, #1]
 121:Src/main.c    **** 	
 687              		.loc 1 121 2 is_stmt 1 view .LVU205
 688 0060 4FF47A73 		mov	r3, #1000
 689 0064 0222     		movs	r2, #2
 690 0066 6946     		mov	r1, sp
 691 0068 2D48     		ldr	r0, .L28+24
 692 006a FFF7FEFF 		bl	HAL_SPI_Transmit
 693              	.LVL31:
 124:Src/main.c    ****   
 694              		.loc 1 124 2 view .LVU206
 695 006e 0A20     		movs	r0, #10
 696 0070 FFF7FEFF 		bl	HAL_Delay
 697              	.LVL32:
 698              	.L26:
 699              	.LBE4:
 100:Src/main.c    ****   {
 700              		.loc 1 100 3 view .LVU207
 701              	.LBB5:
 103:Src/main.c    **** 	integral += .01 * slip;
 702              		.loc 1 103 2 view .LVU208
 103:Src/main.c    **** 	integral += .01 * slip;
 703              		.loc 1 103 15 is_stmt 0 view .LVU209
 704 0074 2B4B     		ldr	r3, .L28+28
 705 0076 1C68     		ldr	r4, [r3]
 706 0078 2B4B     		ldr	r3, .L28+32
 707 007a 1D68     		ldr	r5, [r3]
 708 007c 601B     		subs	r0, r4, r5
 103:Src/main.c    **** 	integral += .01 * slip;
 709              		.loc 1 103 7 view .LVU210
 710 007e 2B4B     		ldr	r3, .L28+36
 711 0080 1860     		str	r0, [r3]
 104:Src/main.c    ****   
 712              		.loc 1 104 2 is_stmt 1 view .LVU211
 104:Src/main.c    ****   
 713              		.loc 1 104 18 is_stmt 0 view .LVU212
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 23


 714 0082 FFF7FEFF 		bl	__aeabi_i2d
 715              	.LVL33:
 716 0086 0646     		mov	r6, r0
 717 0088 0F46     		mov	r7, r1
 718 008a 1FA3     		adr	r3, .L28
 719 008c D3E90023 		ldrd	r2, [r3]
 720 0090 FFF7FEFF 		bl	__aeabi_dmul
 721              	.LVL34:
 722 0094 8046     		mov	r8, r0
 723 0096 8946     		mov	r9, r1
 104:Src/main.c    ****   
 724              		.loc 1 104 11 view .LVU213
 725 0098 DFF89CA0 		ldr	r10, .L28+48
 726 009c DAF80000 		ldr	r0, [r10]	@ float
 727 00a0 FFF7FEFF 		bl	__aeabi_f2d
 728              	.LVL35:
 729 00a4 4246     		mov	r2, r8
 730 00a6 4B46     		mov	r3, r9
 731 00a8 FFF7FEFF 		bl	__aeabi_dadd
 732              	.LVL36:
 733 00ac FFF7FEFF 		bl	__aeabi_d2f
 734              	.LVL37:
 735 00b0 8046     		mov	r8, r0
 736 00b2 CAF80000 		str	r0, [r10]	@ float
 106:Src/main.c    **** 	
 737              		.loc 1 106 2 is_stmt 1 view .LVU214
 106:Src/main.c    **** 	
 738              		.loc 1 106 20 is_stmt 0 view .LVU215
 739 00b6 0022     		movs	r2, #0
 740 00b8 1D4B     		ldr	r3, .L28+40
 741 00ba 3046     		mov	r0, r6
 742 00bc 3946     		mov	r1, r7
 743 00be FFF7FEFF 		bl	__aeabi_dmul
 744              	.LVL38:
 745 00c2 0646     		mov	r6, r0
 746 00c4 0F46     		mov	r7, r1
 106:Src/main.c    **** 	
 747              		.loc 1 106 13 view .LVU216
 748 00c6 1B4B     		ldr	r3, .L28+44
 749 00c8 1868     		ldr	r0, [r3]
 750 00ca FFF7FEFF 		bl	__aeabi_i2d
 751              	.LVL39:
 752 00ce 3246     		mov	r2, r6
 753 00d0 3B46     		mov	r3, r7
 754 00d2 FFF7FEFF 		bl	__aeabi_dadd
 755              	.LVL40:
 756 00d6 0646     		mov	r6, r0
 757 00d8 0F46     		mov	r7, r1
 106:Src/main.c    **** 	
 758              		.loc 1 106 33 view .LVU217
 759 00da 4046     		mov	r0, r8
 760 00dc FFF7FEFF 		bl	__aeabi_f2d
 761              	.LVL41:
 762 00e0 0BA3     		adr	r3, .L28+8
 763 00e2 D3E90023 		ldrd	r2, [r3]
 764 00e6 FFF7FEFF 		bl	__aeabi_dmul
 765              	.LVL42:
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 24


 106:Src/main.c    **** 	
 766              		.loc 1 106 27 view .LVU218
 767 00ea 0246     		mov	r2, r0
 768 00ec 0B46     		mov	r3, r1
 769 00ee 3046     		mov	r0, r6
 770 00f0 3946     		mov	r1, r7
 771 00f2 FFF7FEFF 		bl	__aeabi_dadd
 772              	.LVL43:
 106:Src/main.c    **** 	
 773              		.loc 1 106 6 view .LVU219
 774 00f6 FFF7FEFF 		bl	__aeabi_d2iz
 775              	.LVL44:
 776 00fa 074B     		ldr	r3, .L28+16
 777 00fc 1860     		str	r0, [r3]
 108:Src/main.c    **** 	if (val < 0) val = 0;
 778              		.loc 1 108 2 is_stmt 1 view .LVU220
 108:Src/main.c    **** 	if (val < 0) val = 0;
 779              		.loc 1 108 5 is_stmt 0 view .LVU221
 780 00fe FF28     		cmp	r0, #255
 781 0100 8FDD     		ble	.L24
 108:Src/main.c    **** 	if (val < 0) val = 0;
 782              		.loc 1 108 17 is_stmt 1 discriminator 1 view .LVU222
 108:Src/main.c    **** 	if (val < 0) val = 0;
 783              		.loc 1 108 21 is_stmt 0 discriminator 1 view .LVU223
 784 0102 FF22     		movs	r2, #255
 785 0104 1A60     		str	r2, [r3]
 786 0106 8CE7     		b	.L24
 787              	.L29:
 788              		.align	3
 789              	.L28:
 790 0108 7B14AE47 		.word	1202590843
 791 010c E17A843F 		.word	1065646817
 792 0110 9A999999 		.word	-1717986918
 793 0114 9999B93F 		.word	1069128089
 794 0118 00000000 		.word	.LANCHOR3
 795 011c 00000000 		.word	huart1
 796 0120 00000000 		.word	hspi1
 797 0124 00000000 		.word	freq3
 798 0128 00000000 		.word	freq2
 799 012c 00000000 		.word	.LANCHOR0
 800 0130 0000F43F 		.word	1072955392
 801 0134 00000000 		.word	.LANCHOR2
 802 0138 00000000 		.word	.LANCHOR1
 803              	.LBE5:
 804              		.cfi_endproc
 805              	.LFE66:
 807              		.section	.text.EXTI2_IRQHandler,"ax",%progbits
 808              		.align	1
 809              		.global	EXTI2_IRQHandler
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu softvfp
 815              	EXTI2_IRQHandler:
 816              	.LFB73:
 377:Src/main.c    **** 
 378:Src/main.c    **** /******************************************************************************/
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 25


 379:Src/main.c    **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 380:Src/main.c    **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 381:Src/main.c    **** /* For the available peripheral interrupt handler names,                      */
 382:Src/main.c    **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 383:Src/main.c    **** /******************************************************************************/
 384:Src/main.c    **** 
 385:Src/main.c    **** /**
 386:Src/main.c    ****   * @brief This function handles EXTI line2 interrupt.
 387:Src/main.c    ****   */
 388:Src/main.c    **** void EXTI2_IRQHandler(void)
 389:Src/main.c    **** {
 817              		.loc 1 389 1 is_stmt 1 view -0
 818              		.cfi_startproc
 819              		@ args = 0, pretend = 0, frame = 0
 820              		@ frame_needed = 0, uses_anonymous_args = 0
 821 0000 08B5     		push	{r3, lr}
 822              	.LCFI16:
 823              		.cfi_def_cfa_offset 8
 824              		.cfi_offset 3, -8
 825              		.cfi_offset 14, -4
 390:Src/main.c    **** 	/* USER CODE BEGIN EXTI2_IRQn 0 */
 391:Src/main.c    **** 	long pin2c = __HAL_TIM_GET_COUNTER(&htim2);
 826              		.loc 1 391 2 view .LVU225
 827              		.loc 1 391 15 is_stmt 0 view .LVU226
 828 0002 124B     		ldr	r3, .L34
 829 0004 1B68     		ldr	r3, [r3]
 830 0006 5A6A     		ldr	r2, [r3, #36]
 831              	.LVL45:
 392:Src/main.c    ****     if (pin2c > pin2t) pin2p = pin2c-pin2t;
 832              		.loc 1 392 5 is_stmt 1 view .LVU227
 833              		.loc 1 392 15 is_stmt 0 view .LVU228
 834 0008 114B     		ldr	r3, .L34+4
 835 000a 1B68     		ldr	r3, [r3]
 836              		.loc 1 392 8 view .LVU229
 837 000c 9342     		cmp	r3, r2
 838 000e 15DA     		bge	.L31
 839              		.loc 1 392 24 is_stmt 1 discriminator 1 view .LVU230
 840              		.loc 1 392 37 is_stmt 0 discriminator 1 view .LVU231
 841 0010 D31A     		subs	r3, r2, r3
 842              		.loc 1 392 30 discriminator 1 view .LVU232
 843 0012 1049     		ldr	r1, .L34+8
 844 0014 0B60     		str	r3, [r1]
 845              	.L32:
 393:Src/main.c    ****     else pin2p = pin2c-pin2t+40000;
 394:Src/main.c    ****     freq2 = 40000 / pin2p;
 846              		.loc 1 394 5 is_stmt 1 view .LVU233
 847              		.loc 1 394 19 is_stmt 0 view .LVU234
 848 0016 0F4B     		ldr	r3, .L34+8
 849 0018 1968     		ldr	r1, [r3]
 850 001a 49F64043 		movw	r3, #40000
 851 001e 93FBF1F3 		sdiv	r3, r3, r1
 852              		.loc 1 394 11 view .LVU235
 853 0022 0D49     		ldr	r1, .L34+12
 854 0024 0B60     		str	r3, [r1]
 395:Src/main.c    ****     pin2t = pin2c;
 855              		.loc 1 395 5 is_stmt 1 view .LVU236
 856              		.loc 1 395 11 is_stmt 0 view .LVU237
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 26


 857 0026 0A4B     		ldr	r3, .L34+4
 858 0028 1A60     		str	r2, [r3]
 396:Src/main.c    **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 859              		.loc 1 396 2 is_stmt 1 view .LVU238
 860 002a 4FF40051 		mov	r1, #8192
 861 002e 0B48     		ldr	r0, .L34+16
 862 0030 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 863              	.LVL46:
 397:Src/main.c    **** 	/*unsigned char data2[1];
 398:Src/main.c    **** 	data2[0] = freq2 & 0xFF;
 399:Src/main.c    **** 	HAL_UART_Transmit(&huart1, data2, sizeof(data2), 1000);*/
 400:Src/main.c    **** 	/* USER CODE END EXTI2_IRQn 0 */
 401:Src/main.c    **** 	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_2);
 864              		.loc 1 401 2 view .LVU239
 865 0034 0420     		movs	r0, #4
 866 0036 FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 867              	.LVL47:
 402:Src/main.c    **** 	/* USER CODE BEGIN EXTI2_IRQn 1 */
 403:Src/main.c    **** 
 404:Src/main.c    **** 	/* USER CODE END EXTI2_IRQn 1 */
 405:Src/main.c    **** }
 868              		.loc 1 405 1 is_stmt 0 view .LVU240
 869 003a 08BD     		pop	{r3, pc}
 870              	.LVL48:
 871              	.L31:
 393:Src/main.c    ****     freq2 = 40000 / pin2p;
 872              		.loc 1 393 10 is_stmt 1 view .LVU241
 393:Src/main.c    ****     freq2 = 40000 / pin2p;
 873              		.loc 1 393 23 is_stmt 0 view .LVU242
 874 003c D31A     		subs	r3, r2, r3
 393:Src/main.c    ****     freq2 = 40000 / pin2p;
 875              		.loc 1 393 29 view .LVU243
 876 003e 03F51C43 		add	r3, r3, #39936
 877 0042 4033     		adds	r3, r3, #64
 393:Src/main.c    ****     freq2 = 40000 / pin2p;
 878              		.loc 1 393 16 view .LVU244
 879 0044 0349     		ldr	r1, .L34+8
 880 0046 0B60     		str	r3, [r1]
 881 0048 E5E7     		b	.L32
 882              	.L35:
 883 004a 00BF     		.align	2
 884              	.L34:
 885 004c 00000000 		.word	htim2
 886 0050 00000000 		.word	pin2t
 887 0054 00000000 		.word	pin2p
 888 0058 00000000 		.word	freq2
 889 005c 00100140 		.word	1073811456
 890              		.cfi_endproc
 891              	.LFE73:
 893              		.section	.text.EXTI3_IRQHandler,"ax",%progbits
 894              		.align	1
 895              		.global	EXTI3_IRQHandler
 896              		.syntax unified
 897              		.thumb
 898              		.thumb_func
 899              		.fpu softvfp
 901              	EXTI3_IRQHandler:
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 27


 902              	.LFB74:
 406:Src/main.c    **** 
 407:Src/main.c    **** /**
 408:Src/main.c    ****   * @brief This function handles EXTI line3 interrupt.
 409:Src/main.c    ****   */
 410:Src/main.c    **** void EXTI3_IRQHandler(void)
 411:Src/main.c    **** {
 903              		.loc 1 411 1 is_stmt 1 view -0
 904              		.cfi_startproc
 905              		@ args = 0, pretend = 0, frame = 0
 906              		@ frame_needed = 0, uses_anonymous_args = 0
 907 0000 08B5     		push	{r3, lr}
 908              	.LCFI17:
 909              		.cfi_def_cfa_offset 8
 910              		.cfi_offset 3, -8
 911              		.cfi_offset 14, -4
 412:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 0 */
 413:Src/main.c    ****   long pin3c = __HAL_TIM_GET_COUNTER(&htim2);
 912              		.loc 1 413 3 view .LVU246
 913              		.loc 1 413 16 is_stmt 0 view .LVU247
 914 0002 0F4B     		ldr	r3, .L40
 915 0004 1B68     		ldr	r3, [r3]
 916 0006 5A6A     		ldr	r2, [r3, #36]
 917              	.LVL49:
 414:Src/main.c    ****   if (pin3c > pin3t) pin3p = pin3c-pin3t;
 918              		.loc 1 414 3 is_stmt 1 view .LVU248
 919              		.loc 1 414 13 is_stmt 0 view .LVU249
 920 0008 0E4B     		ldr	r3, .L40+4
 921 000a 1B68     		ldr	r3, [r3]
 922              		.loc 1 414 6 view .LVU250
 923 000c 9342     		cmp	r3, r2
 924 000e 10DA     		bge	.L37
 925              		.loc 1 414 22 is_stmt 1 discriminator 1 view .LVU251
 926              		.loc 1 414 35 is_stmt 0 discriminator 1 view .LVU252
 927 0010 D31A     		subs	r3, r2, r3
 928              		.loc 1 414 28 discriminator 1 view .LVU253
 929 0012 0D49     		ldr	r1, .L40+8
 930 0014 0B60     		str	r3, [r1]
 931              	.L38:
 415:Src/main.c    ****   else pin3p = pin3c-pin3t+40000;
 416:Src/main.c    ****   freq3 = 40000 / pin3p;
 932              		.loc 1 416 3 is_stmt 1 view .LVU254
 933              		.loc 1 416 17 is_stmt 0 view .LVU255
 934 0016 0C4B     		ldr	r3, .L40+8
 935 0018 1968     		ldr	r1, [r3]
 936 001a 49F64043 		movw	r3, #40000
 937 001e 93FBF1F3 		sdiv	r3, r3, r1
 938              		.loc 1 416 9 view .LVU256
 939 0022 0A49     		ldr	r1, .L40+12
 940 0024 0B60     		str	r3, [r1]
 417:Src/main.c    ****   pin3t = pin3c;
 941              		.loc 1 417 3 is_stmt 1 view .LVU257
 942              		.loc 1 417 9 is_stmt 0 view .LVU258
 943 0026 074B     		ldr	r3, .L40+4
 944 0028 1A60     		str	r2, [r3]
 418:Src/main.c    ****   //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 419:Src/main.c    ****   /*unsigned char data3[2];
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 28


 420:Src/main.c    ****   data3[0] = 255;
 421:Src/main.c    ****   data3[1] = (freq3>>0) & 0xFF;
 422:Src/main.c    ****   HAL_UART_Transmit(&huart1, data3, sizeof(data3), 1000);*/
 423:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 0 */
 424:Src/main.c    ****   HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_3);
 945              		.loc 1 424 3 is_stmt 1 view .LVU259
 946 002a 0820     		movs	r0, #8
 947 002c FFF7FEFF 		bl	HAL_GPIO_EXTI_IRQHandler
 948              	.LVL50:
 425:Src/main.c    ****   /* USER CODE BEGIN EXTI3_IRQn 1 */
 426:Src/main.c    **** 
 427:Src/main.c    ****   /* USER CODE END EXTI3_IRQn 1 */
 428:Src/main.c    **** }
 949              		.loc 1 428 1 is_stmt 0 view .LVU260
 950 0030 08BD     		pop	{r3, pc}
 951              	.LVL51:
 952              	.L37:
 415:Src/main.c    ****   freq3 = 40000 / pin3p;
 953              		.loc 1 415 8 is_stmt 1 view .LVU261
 415:Src/main.c    ****   freq3 = 40000 / pin3p;
 954              		.loc 1 415 21 is_stmt 0 view .LVU262
 955 0032 D31A     		subs	r3, r2, r3
 415:Src/main.c    ****   freq3 = 40000 / pin3p;
 956              		.loc 1 415 27 view .LVU263
 957 0034 03F51C43 		add	r3, r3, #39936
 958 0038 4033     		adds	r3, r3, #64
 415:Src/main.c    ****   freq3 = 40000 / pin3p;
 959              		.loc 1 415 14 view .LVU264
 960 003a 0349     		ldr	r1, .L40+8
 961 003c 0B60     		str	r3, [r1]
 962 003e EAE7     		b	.L38
 963              	.L41:
 964              		.align	2
 965              	.L40:
 966 0040 00000000 		.word	htim2
 967 0044 00000000 		.word	pin3t
 968 0048 00000000 		.word	pin3p
 969 004c 00000000 		.word	freq3
 970              		.cfi_endproc
 971              	.LFE74:
 973              		.section	.text.TIM3_IRQHandler,"ax",%progbits
 974              		.align	1
 975              		.global	TIM3_IRQHandler
 976              		.syntax unified
 977              		.thumb
 978              		.thumb_func
 979              		.fpu softvfp
 981              	TIM3_IRQHandler:
 982              	.LFB75:
 429:Src/main.c    **** 
 430:Src/main.c    **** /**
 431:Src/main.c    ****   * @brief This function handles TIM3 global interrupt.
 432:Src/main.c    ****   */
 433:Src/main.c    **** void TIM3_IRQHandler(void)
 434:Src/main.c    **** {
 983              		.loc 1 434 1 is_stmt 1 view -0
 984              		.cfi_startproc
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 29


 985              		@ args = 0, pretend = 0, frame = 8
 986              		@ frame_needed = 0, uses_anonymous_args = 0
 987 0000 00B5     		push	{lr}
 988              	.LCFI18:
 989              		.cfi_def_cfa_offset 4
 990              		.cfi_offset 14, -4
 991 0002 83B0     		sub	sp, sp, #12
 992              	.LCFI19:
 993              		.cfi_def_cfa_offset 16
 435:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 0 */
 436:Src/main.c    ****   //HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);
 437:Src/main.c    ****   
 438:Src/main.c    **** /*  long slip = freq3 - freq2;
 439:Src/main.c    ****   
 440:Src/main.c    ****   long val = 50 + slip;*/
 441:Src/main.c    ****   
 442:Src/main.c    ****   /*if (direction == 1) val++;
 443:Src/main.c    ****   else val--;
 444:Src/main.c    ****   
 445:Src/main.c    ****   if (val == 255) direction = 0;
 446:Src/main.c    ****   if (val == 0) direction = 1;*/
 447:Src/main.c    ****   
 448:Src/main.c    ****   unsigned char spi_data[2];
 994              		.loc 1 448 3 view .LVU266
 449:Src/main.c    ****   spi_data[0] = 0;
 995              		.loc 1 449 3 view .LVU267
 996              		.loc 1 449 15 is_stmt 0 view .LVU268
 997 0004 0023     		movs	r3, #0
 998 0006 8DF80430 		strb	r3, [sp, #4]
 450:Src/main.c    ****   spi_data[1] = val;
 999              		.loc 1 450 3 is_stmt 1 view .LVU269
 1000              		.loc 1 450 15 is_stmt 0 view .LVU270
 1001 000a 084B     		ldr	r3, .L44
 1002 000c 1B68     		ldr	r3, [r3]
 1003 000e 8DF80530 		strb	r3, [sp, #5]
 451:Src/main.c    ****   HAL_SPI_Transmit(&hspi1, spi_data, sizeof(spi_data), 1000);
 1004              		.loc 1 451 3 is_stmt 1 view .LVU271
 1005 0012 4FF47A73 		mov	r3, #1000
 1006 0016 0222     		movs	r2, #2
 1007 0018 01A9     		add	r1, sp, #4
 1008 001a 0548     		ldr	r0, .L44+4
 1009 001c FFF7FEFF 		bl	HAL_SPI_Transmit
 1010              	.LVL52:
 452:Src/main.c    ****   /* USER CODE END TIM3_IRQn 0 */
 453:Src/main.c    ****   HAL_TIM_IRQHandler(&htim3);
 1011              		.loc 1 453 3 view .LVU272
 1012 0020 0448     		ldr	r0, .L44+8
 1013 0022 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 1014              	.LVL53:
 454:Src/main.c    ****   /* USER CODE BEGIN TIM3_IRQn 1 */
 455:Src/main.c    **** 
 456:Src/main.c    ****   /* USER CODE END TIM3_IRQn 1 */
 457:Src/main.c    **** }
 1015              		.loc 1 457 1 is_stmt 0 view .LVU273
 1016 0026 03B0     		add	sp, sp, #12
 1017              	.LCFI20:
 1018              		.cfi_def_cfa_offset 4
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 30


 1019              		@ sp needed
 1020 0028 5DF804FB 		ldr	pc, [sp], #4
 1021              	.L45:
 1022              		.align	2
 1023              	.L44:
 1024 002c 00000000 		.word	.LANCHOR3
 1025 0030 00000000 		.word	hspi1
 1026 0034 00000000 		.word	htim3
 1027              		.cfi_endproc
 1028              	.LFE75:
 1030              		.section	.text.Error_Handler,"ax",%progbits
 1031              		.align	1
 1032              		.global	Error_Handler
 1033              		.syntax unified
 1034              		.thumb
 1035              		.thumb_func
 1036              		.fpu softvfp
 1038              	Error_Handler:
 1039              	.LFB76:
 458:Src/main.c    **** 
 459:Src/main.c    **** /* USER CODE BEGIN 4 */
 460:Src/main.c    **** 
 461:Src/main.c    **** /* USER CODE END 4 */
 462:Src/main.c    **** 
 463:Src/main.c    **** /**
 464:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 465:Src/main.c    ****   * @retval None
 466:Src/main.c    ****   */
 467:Src/main.c    **** void Error_Handler(void)
 468:Src/main.c    **** {
 1040              		.loc 1 468 1 is_stmt 1 view -0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 0
 1043              		@ frame_needed = 0, uses_anonymous_args = 0
 1044              		@ link register save eliminated.
 469:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 470:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 471:Src/main.c    **** 
 472:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 473:Src/main.c    **** }
 1045              		.loc 1 473 1 view .LVU275
 1046 0000 7047     		bx	lr
 1047              		.cfi_endproc
 1048              	.LFE76:
 1050              		.global	integral
 1051              		.global	slip
 1052              		.global	direction
 1053              		.global	val
 1054              		.global	bias
 1055              		.comm	freq3,4,4
 1056              		.comm	freq2,4,4
 1057              		.comm	pin3t,4,4
 1058              		.comm	pin2t,4,4
 1059              		.comm	pin3p,4,4
 1060              		.comm	pin2p,4,4
 1061              		.comm	huart1,64,4
 1062              		.comm	htim3,64,4
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 31


 1063              		.comm	htim2,64,4
 1064              		.comm	hspi1,88,4
 1065              		.section	.bss.integral,"aw",%nobits
 1066              		.align	2
 1067              		.set	.LANCHOR1,. + 0
 1070              	integral:
 1071 0000 00000000 		.space	4
 1072              		.section	.bss.slip,"aw",%nobits
 1073              		.align	2
 1074              		.set	.LANCHOR0,. + 0
 1077              	slip:
 1078 0000 00000000 		.space	4
 1079              		.section	.bss.val,"aw",%nobits
 1080              		.align	2
 1081              		.set	.LANCHOR3,. + 0
 1084              	val:
 1085 0000 00000000 		.space	4
 1086              		.section	.data.bias,"aw"
 1087              		.align	2
 1088              		.set	.LANCHOR2,. + 0
 1091              	bias:
 1092 0000 4B000000 		.word	75
 1093              		.section	.data.direction,"aw"
 1094              		.align	2
 1097              	direction:
 1098 0000 01000000 		.word	1
 1099              		.text
 1100              	.Letext0:
 1101              		.file 2 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\machine\\_default_types.h"
 1102              		.file 3 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_stdint.h"
 1103              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 1104              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1105              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1106              		.file 7 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\lock.h"
 1107              		.file 8 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\_types.h"
 1108              		.file 9 "c:\\arm-gcc\\8-2018-q4-major\\lib\\gcc\\arm-none-eabi\\8.2.1\\include\\stddef.h"
 1109              		.file 10 "c:\\arm-gcc\\8-2018-q4-major\\arm-none-eabi\\include\\sys\\reent.h"
 1110              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1111              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1112              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1113              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1114              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1115              		.file 16 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 1116              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 1117              		.file 18 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 1118              		.file 19 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1119              		.file 20 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1120              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1121              		.file 22 "<built-in>"
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\cygwin64\tmp\ccDr1vz6.s:16     .text.MX_GPIO_Init:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\cygwin64\tmp\ccDr1vz6.s:147    .text.MX_GPIO_Init:00000090 $d
C:\cygwin64\tmp\ccDr1vz6.s:155    .text.MX_USART1_UART_Init:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:161    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\cygwin64\tmp\ccDr1vz6.s:210    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\cygwin64\tmp\ccDr1vz6.s:216    .text.MX_SPI1_Init:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:222    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\cygwin64\tmp\ccDr1vz6.s:284    .text.MX_SPI1_Init:00000030 $d
                            *COM*:00000058 hspi1
C:\cygwin64\tmp\ccDr1vz6.s:290    .text.MX_TIM3_Init:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:296    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\cygwin64\tmp\ccDr1vz6.s:395    .text.MX_TIM3_Init:00000064 $d
                            *COM*:00000040 htim3
C:\cygwin64\tmp\ccDr1vz6.s:401    .text.MX_TIM2_Init:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:407    .text.MX_TIM2_Init:00000000 MX_TIM2_Init
C:\cygwin64\tmp\ccDr1vz6.s:500    .text.MX_TIM2_Init:0000005c $d
                            *COM*:00000040 htim2
C:\cygwin64\tmp\ccDr1vz6.s:505    .text.SystemClock_Config:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:512    .text.SystemClock_Config:00000000 SystemClock_Config
C:\cygwin64\tmp\ccDr1vz6.s:597    .text.main:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:604    .text.main:00000000 main
C:\cygwin64\tmp\ccDr1vz6.s:790    .text.main:00000108 $d
                            *COM*:00000004 freq3
                            *COM*:00000004 freq2
C:\cygwin64\tmp\ccDr1vz6.s:808    .text.EXTI2_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:815    .text.EXTI2_IRQHandler:00000000 EXTI2_IRQHandler
C:\cygwin64\tmp\ccDr1vz6.s:885    .text.EXTI2_IRQHandler:0000004c $d
                            *COM*:00000004 pin2t
                            *COM*:00000004 pin2p
C:\cygwin64\tmp\ccDr1vz6.s:894    .text.EXTI3_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:901    .text.EXTI3_IRQHandler:00000000 EXTI3_IRQHandler
C:\cygwin64\tmp\ccDr1vz6.s:966    .text.EXTI3_IRQHandler:00000040 $d
                            *COM*:00000004 pin3t
                            *COM*:00000004 pin3p
C:\cygwin64\tmp\ccDr1vz6.s:974    .text.TIM3_IRQHandler:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:981    .text.TIM3_IRQHandler:00000000 TIM3_IRQHandler
C:\cygwin64\tmp\ccDr1vz6.s:1024   .text.TIM3_IRQHandler:0000002c $d
C:\cygwin64\tmp\ccDr1vz6.s:1031   .text.Error_Handler:00000000 $t
C:\cygwin64\tmp\ccDr1vz6.s:1038   .text.Error_Handler:00000000 Error_Handler
C:\cygwin64\tmp\ccDr1vz6.s:1070   .bss.integral:00000000 integral
C:\cygwin64\tmp\ccDr1vz6.s:1077   .bss.slip:00000000 slip
C:\cygwin64\tmp\ccDr1vz6.s:1097   .data.direction:00000000 direction
C:\cygwin64\tmp\ccDr1vz6.s:1084   .bss.val:00000000 val
C:\cygwin64\tmp\ccDr1vz6.s:1091   .data.bias:00000000 bias
C:\cygwin64\tmp\ccDr1vz6.s:1066   .bss.integral:00000000 $d
C:\cygwin64\tmp\ccDr1vz6.s:1073   .bss.slip:00000000 $d
C:\cygwin64\tmp\ccDr1vz6.s:1080   .bss.val:00000000 $d
C:\cygwin64\tmp\ccDr1vz6.s:1087   .data.bias:00000000 $d
C:\cygwin64\tmp\ccDr1vz6.s:1094   .data.direction:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\cygwin64\tmp\ccDr1vz6.s 			page 33


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_UART_Init
HAL_SPI_Init
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_OC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_Base_Start
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
__aeabi_i2d
__aeabi_dmul
__aeabi_f2d
__aeabi_dadd
__aeabi_d2f
__aeabi_d2iz
HAL_Init
HAL_UART_Transmit
HAL_SPI_Transmit
HAL_Delay
HAL_GPIO_TogglePin
HAL_GPIO_EXTI_IRQHandler
HAL_TIM_IRQHandler
